{
  "version": 3,
  "sources": ["../node_modules/cubing/src/cubing/kpuzzle/combine.ts", "../node_modules/cubing/src/cubing/kpuzzle/construct.ts", "../node_modules/cubing/src/cubing/kpuzzle/KState.ts", "../node_modules/cubing/src/cubing/kpuzzle/KTransformation.ts", "../node_modules/cubing/src/cubing/kpuzzle/calculate.ts", "../node_modules/cubing/src/cubing/kpuzzle/KPuzzle.ts", "../node_modules/cubing/src/cubing/puzzles/stickerings/mask.ts", "../node_modules/cubing/src/cubing/puzzles/stickerings/puzzle-stickerings.ts", "../node_modules/cubing/src/cubing/puzzles/stickerings/cube-like-stickerings.ts", "../node_modules/cubing/src/cubing/puzzles/async/lazy-cached.ts", "../node_modules/cubing/src/cubing/vendor/mit/p-lazy/p-lazy.ts", "../node_modules/cubing/src/cubing/puzzles/async/async-pg3d.ts", "../node_modules/cubing/src/cubing/puzzles/implementations/dynamic/3x3x3/3x3x3.kpuzzle.json.ts", "../node_modules/cubing/src/cubing/puzzles/PuzzleLoader.ts", "../node_modules/cubing/src/cubing/puzzles/implementations/dynamic/2x2x2/puzzle-orientation.ts", "../node_modules/cubing/src/cubing/puzzles/customPGPuzzleLoader.ts", "../node_modules/cubing/src/cubing/puzzles/cubing-private/index.ts", "../node_modules/cubing/src/cubing/puzzles/implementations/dynamic/3x3x3/puzzle-orientation.ts", "../node_modules/cubing/src/cubing/puzzles/events.ts", "../node_modules/cubing/src/cubing/puzzles/implementations/2x2x2/index.ts", "../node_modules/cubing/src/cubing/puzzles/implementations/3x3x3/puzzle-specific-simplifications.ts", "../node_modules/cubing/src/cubing/puzzles/implementations/3x3x3/index.ts", "../node_modules/cubing/src/cubing/puzzles/implementations/clock/index.ts", "../node_modules/cubing/src/cubing/puzzles/stickerings/fto-stickerings.ts", "../node_modules/cubing/src/cubing/puzzles/implementations/fto/index.ts", "../node_modules/cubing/src/cubing/puzzles/stickerings/megaminx-stickerings.ts", "../node_modules/cubing/src/cubing/puzzles/implementations/megaminx/index.ts", "../node_modules/cubing/src/cubing/puzzles/implementations/pyraminx/index.ts", "../node_modules/cubing/src/cubing/puzzles/implementations/square1/index.ts", "../node_modules/cubing/src/cubing/puzzles/implementations/kilominx/index.ts", "../node_modules/cubing/src/cubing/puzzles/implementations/redi-cube/index.ts", "../node_modules/cubing/src/cubing/puzzles/implementations/4x4x4/index.ts", "../node_modules/cubing/src/cubing/puzzles/implementations/melindas2x2x2x2/index.ts", "../node_modules/cubing/src/cubing/puzzles/index.ts", "../node_modules/cubing/src/cubing/twisty/debug.ts", "../node_modules/cubing/src/cubing/twisty/model/PromiseFreshener.ts", "../node_modules/cubing/src/cubing/twisty/model/props/TwistyProp.ts", "../node_modules/cubing/src/cubing/twisty/controllers/RenderScheduler.ts", "../node_modules/cubing/src/cubing/twisty/model/props/puzzle/display/HintFaceletProp.ts", "../node_modules/cubing/src/cubing/twisty/views/3D/TAU.ts", "../node_modules/cubing/src/cubing/twisty/views/node-custom-element-shims.ts", "../node_modules/cubing/src/cubing/twisty/views/ManagedCustomElement.ts", "../node_modules/cubing/src/cubing/vendor/mit/three/examples/jsm/libs/stats.modified.module.ts", "../node_modules/cubing/src/cubing/twisty/heavy-code-imports/3d.ts", "../node_modules/cubing/src/cubing/twisty/views/canvas.ts", "../node_modules/cubing/src/cubing/twisty/views/3D/Twisty3DVantage.css.ts", "../node_modules/cubing/src/cubing/twisty/views/3D/DragTracker.ts", "../node_modules/cubing/src/cubing/twisty/views/3D/RendererPool.ts", "../node_modules/cubing/src/cubing/twisty/views/3D/TwistyOrbitControls.ts", "../node_modules/cubing/src/cubing/twisty/views/3D/Twisty3DVantage.ts"],
  "sourcesContent": ["import { isOrbitTransformationDataIdentityUncached } from \"./calculate\";\nimport type {\n  KPuzzleDefinition,\n  KStateData,\n  KTransformationData,\n} from \"./KPuzzleDefinition\";\n\nexport function combineTransformationData(\n  definition: KPuzzleDefinition,\n  transformationData1: KTransformationData,\n  transformationData2: KTransformationData,\n): KTransformationData {\n  const newTransformationData = {} as KTransformationData;\n  for (const orbitName in definition.orbits) {\n    const orbitDefinition = definition.orbits[orbitName];\n    const orbit1 = transformationData1[orbitName];\n    const orbit2 = transformationData2[orbitName];\n    if (\n      isOrbitTransformationDataIdentityUncached(\n        orbitDefinition.numOrientations,\n        orbit2,\n      )\n    ) {\n      // common case for big cubes\n      newTransformationData[orbitName] = orbit1;\n    } else if (\n      isOrbitTransformationDataIdentityUncached(\n        orbitDefinition.numOrientations,\n        orbit1,\n      )\n    ) {\n      newTransformationData[orbitName] = orbit2;\n    } else {\n      const newPerm = new Array(orbitDefinition.numPieces);\n      if (orbitDefinition.numOrientations === 1) {\n        for (let idx = 0; idx < orbitDefinition.numPieces; idx++) {\n          newPerm[idx] = orbit1.permutation[orbit2.permutation[idx]];\n        }\n        newTransformationData[orbitName] = {\n          permutation: newPerm,\n          orientation: orbit1.orientation,\n        };\n      } else {\n        const newOri = new Array(orbitDefinition.numPieces);\n        for (let idx = 0; idx < orbitDefinition.numPieces; idx++) {\n          newOri[idx] =\n            (orbit1.orientation[orbit2.permutation[idx]] +\n              orbit2.orientation[idx]) %\n            orbitDefinition.numOrientations;\n          newPerm[idx] = orbit1.permutation[orbit2.permutation[idx]];\n        }\n        newTransformationData[orbitName] = {\n          permutation: newPerm,\n          orientation: newOri,\n        };\n      }\n    }\n  }\n  return newTransformationData;\n}\n\nexport function applyTransformationDataToStateData(\n  definition: KPuzzleDefinition,\n  stateData: KStateData,\n  transformationData: KTransformationData,\n): KStateData {\n  const newStateData = {} as KStateData;\n  for (const orbitName in definition.orbits) {\n    const orbitDefinition = definition.orbits[orbitName];\n    const orbit1 = stateData[orbitName];\n    const orbit2 = transformationData[orbitName];\n    if (\n      isOrbitTransformationDataIdentityUncached(\n        orbitDefinition.numOrientations,\n        orbit2,\n      )\n    ) {\n      // common case for big cubes\n      newStateData[orbitName] = orbit1;\n    } else {\n      const newPieces = new Array(orbitDefinition.numPieces);\n      if (orbitDefinition.numOrientations === 1) {\n        for (let idx = 0; idx < orbitDefinition.numPieces; idx++) {\n          newPieces[idx] = orbit1.pieces[orbit2.permutation[idx]];\n        }\n        newStateData[orbitName] = {\n          pieces: newPieces,\n          orientation: orbit1.orientation,\n        };\n      } else {\n        const newOri = new Array(orbitDefinition.numPieces);\n        for (let idx = 0; idx < orbitDefinition.numPieces; idx++) {\n          newOri[idx] =\n            (orbit1.orientation[orbit2.permutation[idx]] +\n              orbit2.orientation[idx]) %\n            orbitDefinition.numOrientations;\n          newPieces[idx] = orbit1.pieces[orbit2.permutation[idx]];\n        }\n        newStateData[orbitName] = {\n          pieces: newPieces,\n          orientation: newOri,\n        };\n      }\n    }\n  }\n  return newStateData;\n}\n", "import type { Move } from \"../alg\";\nimport { repeatTransformationUncached } from \"./calculate\";\nimport type { KPuzzle } from \"./KPuzzle\";\nimport type {\n  KPuzzleDefinition,\n  KTransformationData,\n  KTransformationOrbitData,\n} from \"./KPuzzleDefinition\";\n\nconst FREEZE: boolean = false;\n\nconst identityOrbitCache = new Map<number, KTransformationOrbitData>();\nfunction constructIdentityOrbitTransformation(\n  numPieces: number,\n): KTransformationOrbitData {\n  const cached = identityOrbitCache.get(numPieces);\n  if (cached) {\n    return cached;\n  }\n\n  const newPermutation = new Array(numPieces);\n  const newOrientation = new Array(numPieces);\n  for (let i = 0; i < numPieces; i++) {\n    newPermutation[i] = i;\n    newOrientation[i] = 0;\n  }\n  const orbitTransformation = {\n    permutation: newPermutation,\n    orientation: newOrientation,\n  };\n  if (FREEZE) {\n    Object.freeze(newPermutation); // TODO\n    Object.freeze(newOrientation); // TODO\n    Object.freeze(orbitTransformation); // TODO\n  }\n  identityOrbitCache.set(numPieces, orbitTransformation);\n  return orbitTransformation;\n}\n\nexport function constructIdentityTransformationDataUncached(\n  definition: KPuzzleDefinition,\n): KTransformationData {\n  const transformation = {} as KTransformationData;\n  for (const [orbitName, orbitDefinition] of Object.entries(\n    definition.orbits,\n  )) {\n    transformation[orbitName] = constructIdentityOrbitTransformation(\n      orbitDefinition.numPieces,\n    );\n  }\n  if (FREEZE) {\n    Object.freeze(transformation); // TODO\n  }\n  return transformation;\n}\n\nexport function moveToTransformationUncached(\n  kpuzzle: KPuzzle,\n  move: Move,\n): KTransformationData {\n  const quantumKey = move.quantum.toString();\n  let quantumMoveDefinition = kpuzzle.definition.moves[quantumKey] as\n    | KTransformationData\n    | undefined;\n\n  if (!quantumMoveDefinition) {\n    const derivedFrom =\n      kpuzzle.definition.experimentalDerivedMoves?.[quantumKey];\n\n    if (derivedFrom) {\n      // TODO: avoid the round trip?\n      quantumMoveDefinition =\n        kpuzzle.algToTransformation(derivedFrom).transformationData;\n    }\n  }\n\n  if (quantumMoveDefinition) {\n    return repeatTransformationUncached(\n      kpuzzle,\n      quantumMoveDefinition,\n      move.amount,\n    );\n  }\n\n  // Handle e.g. `y2` if `y2` is defined.\n  // Note: this doesn't handle multiples.\n  const moveDefinition = kpuzzle.definition.moves[move.toString()];\n  if (moveDefinition) {\n    return moveDefinition;\n  }\n\n  // Handle e.g. `y2'` if `y2` is defined.\n  // Note: this doesn't handle multiples.\n  const inverseMoveDefinition =\n    kpuzzle.definition.moves[move.invert().toString()];\n  if (inverseMoveDefinition) {\n    return repeatTransformationUncached(kpuzzle, inverseMoveDefinition, -1);\n  }\n\n  throw new Error(`Invalid move for KPuzzle (${kpuzzle.name()}): ${move}`);\n}\n", "import type { KPuzzle } from \"./KPuzzle\";\nimport type { Alg, Move } from \"../alg\";\nimport { applyTransformationDataToStateData } from \"./combine\";\nimport type { KTransformationSource } from \"./KPuzzle\";\nimport type {\n  KStateData,\n  KTransformationData,\n  KTransformationOrbitData,\n} from \"./KPuzzleDefinition\";\nimport { KTransformation } from \"./KTransformation\";\n\nexport class KState {\n  constructor(\n    public readonly kpuzzle: KPuzzle,\n    public readonly stateData: KStateData,\n  ) {}\n\n  toJSON(): any {\n    return {\n      experimentalPuzzleName: this.kpuzzle.name(),\n      stateData: this.stateData,\n    };\n  }\n\n  static fromTransformation(transformation: KTransformation): KState {\n    const newStateData = applyTransformationDataToStateData(\n      transformation.kpuzzle.definition,\n      transformation.kpuzzle.definition.startStateData,\n      transformation.transformationData,\n    );\n    return new KState(transformation.kpuzzle, newStateData);\n  }\n\n  // Convenience function\n  /** @deprecated */\n  apply(source: KTransformationSource): KState {\n    return this.applyTransformation(this.kpuzzle.toTransformation(source));\n  }\n\n  applyTransformation(transformation: KTransformation): KState {\n    if (transformation.isIdentityTransformation()) {\n      return new KState(this.kpuzzle, this.stateData);\n    }\n    const newStateData = applyTransformationDataToStateData(\n      this.kpuzzle.definition,\n      this.stateData,\n      transformation.transformationData,\n    );\n    return new KState(this.kpuzzle, newStateData);\n  }\n\n  applyMove(move: Move | string): KState {\n    return this.applyTransformation(this.kpuzzle.moveToTransformation(move));\n  }\n\n  applyAlg(alg: Alg | string): KState {\n    return this.applyTransformation(this.kpuzzle.algToTransformation(alg));\n  }\n\n  /** @deprecated */\n  experimentalToTransformation(): KTransformation | null {\n    if (!this.kpuzzle.canConvertStateToUniqueTransformation()) {\n      return null;\n    }\n    const transformationData: KTransformationData = {};\n    for (const [orbitName, stateOrbitData] of Object.entries(this.stateData)) {\n      const transformationOrbit: KTransformationOrbitData = {\n        permutation: stateOrbitData.pieces,\n        orientation: stateOrbitData.orientation,\n      };\n      transformationData[orbitName] = transformationOrbit;\n    }\n    return new KTransformation(this.kpuzzle, transformationData);\n  }\n\n  experimentalIsSolved(options: {\n    ignorePuzzleOrientation: boolean;\n    ignoreCenterOrientation: boolean;\n  }): boolean {\n    if (!this.kpuzzle.definition.experimentalIsStateSolved) {\n      throw new Error(\n        \"`KState.experimentalIsSolved()` is not supported for this puzzle at the moment.\",\n      );\n    }\n    return this.kpuzzle.definition.experimentalIsStateSolved(this, options);\n  }\n}\n", "import type { Alg, Move } from \"../alg\";\nimport {\n  invertTransformation,\n  isTransformationDataIdentical,\n  repeatTransformationUncached,\n  transformationRepetitionOrder,\n} from \"./calculate\";\nimport { combineTransformationData } from \"./combine\";\nimport { constructIdentityTransformationDataUncached } from \"./construct\";\nimport type { KPuzzle, KTransformationSource } from \"./KPuzzle\";\nimport type { KTransformationData } from \"./KPuzzleDefinition\";\nimport { KState } from \"./KState\";\n\nexport class KTransformation {\n  constructor(\n    public readonly kpuzzle: KPuzzle,\n    public readonly transformationData: KTransformationData,\n  ) {}\n\n  toJSON(): any {\n    return {\n      experimentalPuzzleName: this.kpuzzle.name(),\n      transformationData: this.transformationData,\n    };\n  }\n\n  invert(): KTransformation {\n    return new KTransformation(\n      this.kpuzzle,\n      invertTransformation(this.kpuzzle, this.transformationData),\n    );\n  }\n\n  // For optimizations, we want to make it cheap to rely on optimizations when a\n  // transformation is an identity. Here, we try to make it cheaper by:\n  // - only calculating when needed, and\n  // - caching the result.\n  #cachedIsIdentity: boolean | undefined; // TODO: is `null` worse here?\n  isIdentityTransformation(): boolean {\n    return (this.#cachedIsIdentity ??= this.isIdentical(\n      this.kpuzzle.identityTransformation(),\n    ));\n  }\n\n  /** @deprecated */\n  static experimentalConstructIdentity(kpuzzle: KPuzzle) {\n    const transformation = new KTransformation(\n      kpuzzle,\n      constructIdentityTransformationDataUncached(kpuzzle.definition),\n    );\n    transformation.#cachedIsIdentity = true;\n    return transformation;\n  }\n\n  isIdentical(t2: KTransformation): boolean {\n    return isTransformationDataIdentical(\n      this.kpuzzle,\n      this.transformationData,\n      t2.transformationData,\n    );\n  }\n\n  // Convenience function\n  /** @deprecated */\n  apply(source: KTransformationSource): KTransformation {\n    return this.applyTransformation(this.kpuzzle.toTransformation(source));\n  }\n\n  applyTransformation(t2: KTransformation): KTransformation {\n    if (this.kpuzzle !== t2.kpuzzle) {\n      throw new Error(\n        `Tried to apply a transformation for a KPuzzle (${t2.kpuzzle.name()}) to a different KPuzzle (${this.kpuzzle.name()}).`,\n      );\n    }\n\n    if (this.#cachedIsIdentity) {\n      return new KTransformation(this.kpuzzle, t2.transformationData);\n    }\n    if (t2.#cachedIsIdentity) {\n      return new KTransformation(this.kpuzzle, this.transformationData);\n    }\n\n    return new KTransformation(\n      this.kpuzzle,\n      combineTransformationData(\n        this.kpuzzle.definition,\n        this.transformationData,\n        t2.transformationData,\n      ),\n    );\n  }\n\n  applyMove(move: Move | string): KTransformation {\n    return this.applyTransformation(this.kpuzzle.moveToTransformation(move));\n  }\n\n  applyAlg(alg: Alg | string): KTransformation {\n    return this.applyTransformation(this.kpuzzle.algToTransformation(alg));\n  }\n\n  // Convenience. Useful for chaining.\n  toKState(): KState {\n    return KState.fromTransformation(this);\n  }\n\n  repetitionOrder(): number {\n    return transformationRepetitionOrder(this.kpuzzle.definition, this);\n  }\n\n  selfMultiply(amount: number): KTransformation {\n    return new KTransformation(\n      this.kpuzzle,\n      repeatTransformationUncached(\n        this.kpuzzle,\n        this.transformationData,\n        amount,\n      ),\n    );\n  }\n}\n", "import {\n  Alg,\n  Commutator,\n  Conjugate,\n  Grouping,\n  LineComment,\n  Move,\n  Newline,\n  Pause,\n  TraversalDownUp,\n} from \"../alg\";\nimport { functionFromTraversal } from \"../alg\";\nimport { combineTransformationData } from \"./combine\";\nimport type { KPuzzle } from \"./KPuzzle\";\nimport type {\n  KOrbitDefinition,\n  KTransformationOrbitData,\n  KTransformationData,\n  KPuzzleDefinition,\n} from \"./KPuzzleDefinition\";\nimport { KTransformation } from \"./KTransformation\";\n\nexport function isOrbitTransformationDataIdentityUncached(\n  numOrientations: number,\n  orbitTransformationData: KTransformationOrbitData,\n): boolean {\n  // TODO\n  // if (o === lasto) {\n  //   return true;\n  // }\n  const { permutation } = orbitTransformationData;\n  const numPieces = permutation.length;\n  for (let idx = 0; idx < numPieces; idx++) {\n    if (permutation[idx] !== idx) {\n      return false;\n    }\n  }\n  if (numOrientations > 1) {\n    const { orientation } = orbitTransformationData;\n    for (let idx = 0; idx < numPieces; idx++) {\n      if (orientation[idx] !== 0) {\n        return false;\n      }\n    }\n  }\n  // lasto = o; // TODO\n  return true;\n}\n\nexport function isOrbitTransformationDataIdentical(\n  orbitDefinition: KOrbitDefinition,\n  orbitTransformationData1: KTransformationOrbitData,\n  orbitTransformationData2: KTransformationOrbitData,\n  options: {\n    ignoreOrientation?: boolean;\n    ignorePermutation?: boolean;\n  } = {},\n): boolean {\n  for (let idx = 0; idx < orbitDefinition.numPieces; idx++) {\n    if (\n      !options?.ignoreOrientation &&\n      orbitTransformationData1.orientation[idx] !==\n        orbitTransformationData2.orientation[idx]\n    ) {\n      return false;\n    }\n    if (\n      !options?.ignorePermutation &&\n      orbitTransformationData1.permutation[idx] !==\n        orbitTransformationData2.permutation[idx]\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function isTransformationDataIdentical(\n  kpuzzle: KPuzzle,\n  transformationData1: KTransformationData,\n  transformationData2: KTransformationData,\n): boolean {\n  for (const [orbitName, orbitDefinition] of Object.entries(\n    kpuzzle.definition.orbits,\n  )) {\n    if (\n      !isOrbitTransformationDataIdentical(\n        orbitDefinition,\n        transformationData1[orbitName],\n        transformationData2[orbitName],\n      )\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function invertTransformation(\n  kpuzzle: KPuzzle,\n  transformationData: KTransformationData,\n): KTransformationData {\n  const newTransformationData: KTransformationData = {};\n  for (const orbitName in kpuzzle.definition.orbits) {\n    const orbitDefinition: KOrbitDefinition =\n      kpuzzle.definition.orbits[orbitName];\n    const orbitTransformationData = transformationData[orbitName];\n    if (\n      isOrbitTransformationDataIdentityUncached(\n        orbitDefinition.numOrientations,\n        orbitTransformationData,\n      )\n    ) {\n      newTransformationData[orbitName] = orbitTransformationData;\n    } else if (orbitDefinition.numOrientations === 1) {\n      const newPerm = new Array(orbitDefinition.numPieces);\n      for (let idx = 0; idx < orbitDefinition.numPieces; idx++) {\n        newPerm[orbitTransformationData.permutation[idx]] = idx;\n      }\n      newTransformationData[orbitName] = {\n        permutation: newPerm,\n        orientation: orbitTransformationData.orientation,\n      };\n    } else {\n      const newPerm = new Array(orbitDefinition.numPieces);\n      const newOri = new Array(orbitDefinition.numPieces);\n      for (let idx = 0; idx < orbitDefinition.numPieces; idx++) {\n        const fromIdx = orbitTransformationData.permutation[idx];\n        newPerm[fromIdx] = idx;\n        newOri[fromIdx] =\n          (orbitDefinition.numOrientations -\n            orbitTransformationData.orientation[idx] +\n            orbitDefinition.numOrientations) %\n          orbitDefinition.numOrientations;\n      }\n      newTransformationData[orbitName] = {\n        permutation: newPerm,\n        orientation: newOri,\n      };\n    }\n  }\n  return newTransformationData;\n}\n\nexport function repeatTransformationUncached(\n  kpuzzle: KPuzzle,\n  transformationData: KTransformationData,\n  amount: number,\n): KTransformationData {\n  // This is used for move construction, so we optimize for the quantum move case.\n  if (amount === 1) {\n    return transformationData;\n  }\n  if (amount < 0) {\n    return repeatTransformationUncached(\n      kpuzzle,\n      invertTransformation(kpuzzle, transformationData),\n      -amount,\n    );\n  }\n  if (amount === 0) {\n    // TODO\n    const { transformationData } = kpuzzle.identityTransformation();\n    return transformationData;\n  }\n  let halfish = transformationData;\n  if (amount !== 2) {\n    halfish = repeatTransformationUncached(\n      kpuzzle,\n      transformationData,\n      Math.floor(amount / 2),\n    );\n  }\n  const twiceHalfish = combineTransformationData(\n    kpuzzle.definition,\n    halfish,\n    halfish,\n  );\n  if (amount % 2 === 0) {\n    return twiceHalfish;\n  } else {\n    return combineTransformationData(\n      kpuzzle.definition,\n      transformationData,\n      twiceHalfish,\n    );\n  }\n}\n\nclass AlgToTransformationTraversal extends TraversalDownUp<\n  KPuzzle,\n  KTransformation\n> {\n  traverseAlg(alg: Alg, kpuzzle: KPuzzle): KTransformation {\n    let transformation: KTransformation | null = null;\n    for (const algNode of alg.childAlgNodes()) {\n      if (transformation) {\n        transformation = transformation.applyTransformation(\n          this.traverseAlgNode(algNode, kpuzzle),\n        );\n      } else {\n        transformation = this.traverseAlgNode(algNode, kpuzzle);\n      }\n    }\n    return transformation ?? kpuzzle.identityTransformation();\n  }\n  traverseGrouping(grouping: Grouping, kpuzzle: KPuzzle): KTransformation {\n    const algTransformation = this.traverseAlg(grouping.alg, kpuzzle);\n    return new KTransformation(\n      kpuzzle,\n      repeatTransformationUncached(\n        kpuzzle,\n        algTransformation.transformationData,\n        grouping.amount,\n      ),\n    );\n  }\n  traverseMove(move: Move, kpuzzle: KPuzzle): KTransformation {\n    return kpuzzle.moveToTransformation(move);\n  }\n  traverseCommutator(\n    commutator: Commutator,\n    kpuzzle: KPuzzle,\n  ): KTransformation {\n    const aTransformation = this.traverseAlg(commutator.A, kpuzzle);\n    const bTransformation = this.traverseAlg(commutator.B, kpuzzle);\n    return aTransformation\n      .applyTransformation(bTransformation)\n      .applyTransformation(aTransformation.invert())\n      .applyTransformation(bTransformation.invert());\n  }\n  traverseConjugate(conjugate: Conjugate, kpuzzle: KPuzzle): KTransformation {\n    const aTransformation = this.traverseAlg(conjugate.A, kpuzzle);\n    const bTransformation = this.traverseAlg(conjugate.B, kpuzzle);\n    return aTransformation\n      .applyTransformation(bTransformation)\n      .applyTransformation(aTransformation.invert());\n  }\n  traversePause(_: Pause, kpuzzle: KPuzzle): KTransformation {\n    return kpuzzle.identityTransformation();\n  }\n  traverseNewline(_: Newline, kpuzzle: KPuzzle): KTransformation {\n    return kpuzzle.identityTransformation();\n  }\n  traverseLineComment(_: LineComment, kpuzzle: KPuzzle): KTransformation {\n    return kpuzzle.identityTransformation();\n  }\n}\n\nexport const algToTransformation = functionFromTraversal(\n  AlgToTransformationTraversal,\n);\n\nexport function canConvertStateToUniqueTransformationUncached(\n  definition: KPuzzleDefinition,\n): boolean {\n  for (const [orbitName, orbitDefinition] of Object.entries(definition)) {\n    const pieces = new Array(orbitDefinition.numPieces).fill(false);\n    for (const piece of this.definition.startStateData[orbitName].pieces) {\n      pieces[piece] = true;\n    }\n    for (const piece of pieces) {\n      if (!piece) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nfunction gcd(a: number, b: number): number {\n  if (b) {\n    return gcd(b, a % b);\n  }\n  return a;\n}\n\n/* calculate the order of a particular transformation. */\nexport function transformationRepetitionOrder(\n  definition: KPuzzleDefinition,\n  transformation: KTransformation,\n): number {\n  let order: number = 1;\n  for (const orbitName in definition.orbits) {\n    const orbitDefinition = definition.orbits[orbitName];\n    const transformationOrbit = transformation.transformationData[orbitName];\n    const orbitPieces = new Array(orbitDefinition.numPieces);\n    for (let startIdx = 0; startIdx < orbitDefinition.numPieces; startIdx++) {\n      if (!orbitPieces[startIdx]) {\n        let currentIdx = startIdx;\n        let orientationSum = 0;\n        let cycleLength = 0;\n        for (;;) {\n          orbitPieces[currentIdx] = true;\n          orientationSum =\n            orientationSum + transformationOrbit.orientation[currentIdx];\n          cycleLength = cycleLength + 1;\n          currentIdx = transformationOrbit.permutation[currentIdx];\n          if (currentIdx === startIdx) {\n            break;\n          }\n        }\n        if (orientationSum !== 0) {\n          cycleLength =\n            (cycleLength * orbitDefinition.numOrientations) /\n            gcd(orbitDefinition.numOrientations, Math.abs(orientationSum));\n        }\n        order = (order * cycleLength) / gcd(order, cycleLength);\n      }\n    }\n  }\n  return order;\n}\n", "import { Alg, Move } from \"../alg\";\nimport type { PGNotation } from \"../puzzle-geometry/PuzzleGeometry\";\nimport { algToTransformation } from \"./calculate\";\nimport { moveToTransformationUncached } from \"./construct\";\nimport type {\n  KPuzzleDefinition,\n  KTransformationData,\n} from \"./KPuzzleDefinition\";\nimport { KState } from \"./KState\";\nimport { KTransformation } from \"./KTransformation\";\n\nexport type KTransformationSource = Alg | Move | string | KTransformation;\n\nexport class KPuzzle {\n  private experimentalPGNotation: PGNotation | undefined;\n  constructor(\n    public readonly definition: KPuzzleDefinition,\n    options?: {\n      experimentalPGNotation?: PGNotation;\n    },\n  ) {\n    this.experimentalPGNotation = options?.experimentalPGNotation;\n  }\n\n  name(): string {\n    return this.definition.name; // TODO\n  }\n\n  identityTransformation(): KTransformation {\n    return KTransformation.experimentalConstructIdentity(this);\n  }\n\n  #moveToTransformationDataCache = new Map<string, KTransformationData>();\n  moveToTransformation(move: Move | string): KTransformation {\n    if (typeof move === \"string\") {\n      move = new Move(move);\n    }\n    const cacheKey = move.toString();\n    const cachedTransformationData: KTransformationData | undefined =\n      this.#moveToTransformationDataCache.get(cacheKey);\n    if (cachedTransformationData) {\n      return new KTransformation(this, cachedTransformationData);\n    }\n\n    if (this.experimentalPGNotation) {\n      const transformationData = this.experimentalPGNotation.lookupMove(move);\n      if (!transformationData) {\n        throw new Error(`could not map to internal move: ${move}`);\n      }\n      this.#moveToTransformationDataCache.set(cacheKey, transformationData);\n      return new KTransformation(this, transformationData);\n    }\n\n    const transformationData = moveToTransformationUncached(this, move);\n    this.#moveToTransformationDataCache.set(cacheKey, transformationData);\n    return new KTransformation(this, transformationData);\n  }\n\n  algToTransformation(alg: Alg | string): KTransformation {\n    if (typeof alg === \"string\") {\n      alg = new Alg(alg);\n    }\n    return algToTransformation(alg, this);\n  }\n\n  /** @deprecated */\n  toTransformation(source: KTransformationSource): KTransformation {\n    if (typeof source === \"string\") {\n      return this.algToTransformation(source);\n    } else if ((source as Alg | null)?.is?.(Alg)) {\n      return this.algToTransformation(source as Alg);\n    } else if ((source as Move | null)?.is?.(Move)) {\n      return this.moveToTransformation(source as Move);\n    } else {\n      return source as KTransformation;\n    }\n  }\n\n  startState(): KState {\n    return new KState(this, this.definition.startStateData);\n  }\n\n  #cachedCanConvertStateToUniqueTransformation: boolean | undefined;\n  // TODO: Handle incomplete start state data\n  canConvertStateToUniqueTransformation(): boolean {\n    return (this.#cachedCanConvertStateToUniqueTransformation ??=\n      ((): boolean => {\n        for (const [orbitName, orbitDefinition] of Object.entries(\n          this.definition.orbits,\n        )) {\n          const pieces = new Array(orbitDefinition.numPieces).fill(false);\n          for (const piece of this.definition.startStateData[orbitName]\n            .pieces) {\n            pieces[piece] = true;\n          }\n          for (const piece of pieces) {\n            if (!piece) {\n              return false;\n            }\n          }\n        }\n        return true;\n      })());\n  }\n}\n", "// TODO: figure out where to house this permanently.\n\nimport type { Move } from \"../../alg\";\nimport type { KPuzzle } from \"../../kpuzzle\";\n\nexport type FaceletMeshStickeringMask =\n  | \"regular\"\n  | \"dim\"\n  | \"oriented\"\n  | \"ignored\"\n  | \"invisible\";\n\nexport type FaceletStickeringMask = {\n  mask: FaceletMeshStickeringMask;\n  hintMask?: FaceletMeshStickeringMask;\n};\n\nexport type PieceStickeringMask = {\n  // TODO: foundation?\n  facelets: (FaceletMeshStickeringMask | FaceletStickeringMask | null)[];\n};\n\nexport type OrbitStickeringMask = {\n  pieces: (PieceStickeringMask | null)[];\n};\n\nexport type StickeringMask = {\n  specialBehaviour?: \"picture\"; // TODO: remove this\n  name?: string; // TODO\n  orbits: Record<string, OrbitStickeringMask>;\n};\n\nexport function getFaceletStickeringMask(\n  stickeringMask: StickeringMask,\n  orbitName: string,\n  pieceIdx: number,\n  faceletIdx: number,\n  hint: boolean,\n): FaceletMeshStickeringMask {\n  const orbitStickeringMask = stickeringMask.orbits[orbitName];\n  const pieceStickeringMask: PieceStickeringMask | null =\n    orbitStickeringMask.pieces[pieceIdx];\n  if (pieceStickeringMask === null) {\n    return regular;\n  }\n  const faceletStickeringMask:\n    | FaceletMeshStickeringMask\n    | FaceletStickeringMask\n    | null = pieceStickeringMask.facelets?.[faceletIdx];\n  if (faceletStickeringMask === null) {\n    return regular;\n  }\n  if (typeof faceletStickeringMask === \"string\") {\n    return faceletStickeringMask;\n  }\n  if (hint) {\n    return faceletStickeringMask.hintMask ?? faceletStickeringMask.mask;\n  }\n  console.log(faceletStickeringMask);\n  return faceletStickeringMask.mask;\n}\n\n// TODO: Revert this to a normal enum, or write a standard to codify the names?\nexport enum PieceStickering {\n  Regular = \"Regular\",\n  Dim = \"Dim\",\n  Ignored = \"Ignored\",\n  OrientationStickers = \"OrientationStickers\",\n  Invisible = \"Invisible\",\n  Ignoriented = \"Ignoriented\",\n  IgnoreNonPrimary = \"IgnoreNonPrimary\",\n  PermuteNonPrimary = \"PermuteNonPrimary\",\n  OrientationWithoutPermutation = \"OrientationWithoutPermutation\",\n}\n\nexport class PieceAnnotation<T> {\n  stickerings: Map<string, T[]> = new Map();\n  constructor(kpuzzle: KPuzzle, defaultValue: T) {\n    for (const [orbitName, orbitDef] of Object.entries(\n      kpuzzle.definition.orbits,\n    )) {\n      this.stickerings.set(\n        orbitName,\n        new Array(orbitDef.numPieces).fill(defaultValue),\n      );\n    }\n  }\n}\n\nconst regular = \"regular\";\nconst ignored = \"ignored\";\nconst oriented = \"oriented\";\nconst invisible = \"invisible\";\nconst dim = \"dim\";\n\n// We specify 5 facelets, because that's the maximum we need for any built-in puzzles (e.g. Megaminx centers or icosa vertices).\n// TODO: use \"primary\" and \"non-primary\" fields instead of listing all non-primary facelets.\nconst pieceStickerings: Record<string, PieceStickeringMask> = {\n  // regular\n  [PieceStickering.Regular]: {\n    // r\n    facelets: [regular, regular, regular, regular, regular],\n  },\n\n  // ignored\n  [PieceStickering.Ignored]: {\n    // i\n    facelets: [ignored, ignored, ignored, ignored, ignored],\n  },\n\n  // oriented stickers\n  [PieceStickering.OrientationStickers]: {\n    // o\n    facelets: [oriented, oriented, oriented, oriented, oriented],\n  },\n\n  // \"OLL\"\n  [PieceStickering.IgnoreNonPrimary]: {\n    // riiii\n    facelets: [regular, ignored, ignored, ignored, ignored],\n  },\n\n  // invisible\n  [PieceStickering.Invisible]: {\n    // invisiblePiece\n    facelets: [invisible, invisible, invisible, invisible, invisible],\n  },\n\n  // \"PLL\"\n  [PieceStickering.PermuteNonPrimary]: {\n    // drrrr\n    facelets: [dim, regular, regular, regular, regular],\n  },\n\n  // ignored\n  [PieceStickering.Dim]: {\n    // d\n    facelets: [dim, dim, dim, dim, dim],\n  },\n\n  // \"OLL\"\n  [PieceStickering.Ignoriented]: {\n    // diiii\n    facelets: [dim, ignored, ignored, ignored, ignored],\n  },\n  [PieceStickering.OrientationWithoutPermutation]: {\n    // oiiii\n    facelets: [oriented, ignored, ignored, ignored, ignored],\n  },\n};\n\nexport function getPieceStickeringMask(\n  pieceStickering: PieceStickering,\n): PieceStickeringMask {\n  return pieceStickerings[pieceStickering];\n}\n\nexport class PuzzleStickering extends PieceAnnotation<PieceStickering> {\n  constructor(kpuzzle: KPuzzle) {\n    super(kpuzzle, PieceStickering.Regular);\n  }\n\n  set(pieceSet: PieceSet, pieceStickering: PieceStickering): PuzzleStickering {\n    for (const [orbitName, pieces] of this.stickerings.entries()) {\n      for (let i = 0; i < pieces.length; i++) {\n        if (pieceSet.stickerings.get(orbitName)![i]) {\n          pieces[i] = pieceStickering;\n        }\n      }\n    }\n    return this;\n  }\n\n  toStickeringMask(): StickeringMask {\n    const stickeringMask: StickeringMask = { orbits: {} };\n    for (const [orbitName, pieceStickerings] of this.stickerings.entries()) {\n      const pieces: PieceStickeringMask[] = [];\n      const orbitStickeringMask: OrbitStickeringMask = {\n        pieces,\n      };\n      stickeringMask.orbits[orbitName] = orbitStickeringMask;\n      for (const pieceStickering of pieceStickerings) {\n        pieces.push(getPieceStickeringMask(pieceStickering));\n      }\n    }\n    return stickeringMask;\n  }\n}\n\nexport type PieceSet = PieceAnnotation<boolean>;\n\nexport class StickeringManager {\n  constructor(private kpuzzle: KPuzzle) {}\n\n  and(pieceSets: PieceSet[]): PieceSet {\n    const newPieceSet = new PieceAnnotation<boolean>(this.kpuzzle, false);\n    for (const [orbitName, orbitDef] of Object.entries(\n      this.kpuzzle.definition.orbits,\n    )) {\n      pieceLoop: for (let i = 0; i < orbitDef.numPieces; i++) {\n        newPieceSet.stickerings.get(orbitName)![i] = true;\n        for (const pieceSet of pieceSets) {\n          if (!pieceSet.stickerings.get(orbitName)![i]) {\n            newPieceSet.stickerings.get(orbitName)![i] = false;\n            continue pieceLoop;\n          }\n        }\n      }\n    }\n    return newPieceSet;\n  }\n\n  or(pieceSets: PieceSet[]): PieceSet {\n    // TODO: unify impl with and?\n    const newPieceSet = new PieceAnnotation<boolean>(this.kpuzzle, false);\n    for (const [orbitName, orbitDef] of Object.entries(\n      this.kpuzzle.definition.orbits,\n    )) {\n      pieceLoop: for (let i = 0; i < orbitDef.numPieces; i++) {\n        newPieceSet.stickerings.get(orbitName)![i] = false;\n        for (const pieceSet of pieceSets) {\n          if (pieceSet.stickerings.get(orbitName)![i]) {\n            newPieceSet.stickerings.get(orbitName)![i] = true;\n            continue pieceLoop;\n          }\n        }\n      }\n    }\n    return newPieceSet;\n  }\n\n  not(pieceSet: PieceSet): PieceSet {\n    const newPieceSet = new PieceAnnotation<boolean>(this.kpuzzle, false);\n    for (const [orbitName, orbitDef] of Object.entries(\n      this.kpuzzle.definition.orbits,\n    )) {\n      for (let i = 0; i < orbitDef.numPieces; i++) {\n        newPieceSet.stickerings.get(orbitName)![i] =\n          !pieceSet.stickerings.get(orbitName)![i];\n      }\n    }\n    return newPieceSet;\n  }\n\n  all(): PieceSet {\n    return this.and(this.moves([])); // TODO: are the degenerate cases for and/or the wrong way around\n  }\n\n  move(moveSource: Move | string): PieceSet {\n    const transformation = this.kpuzzle.moveToTransformation(moveSource);\n    const newPieceSet = new PieceAnnotation<boolean>(this.kpuzzle, false);\n    for (const [orbitName, orbitDef] of Object.entries(\n      this.kpuzzle.definition.orbits,\n    )) {\n      for (let i = 0; i < orbitDef.numPieces; i++) {\n        if (\n          transformation.transformationData[orbitName].permutation[i] !== i ||\n          transformation.transformationData[orbitName].orientation[i] !== 0\n        ) {\n          newPieceSet.stickerings.get(orbitName)![i] = true;\n        }\n      }\n    }\n    return newPieceSet;\n  }\n\n  moves(moveSources: (Move | string)[]): PieceSet[] {\n    return moveSources.map((moveSource) => this.move(moveSource));\n  }\n\n  orbits(orbitNames: string[]): PieceSet {\n    const pieceSet = new PieceAnnotation<boolean>(this.kpuzzle, false);\n    for (const orbitName of orbitNames) {\n      pieceSet.stickerings.get(orbitName)!.fill(true);\n    }\n    return pieceSet;\n  }\n\n  orbitPrefix(orbitPrefix: string): PieceSet {\n    const pieceSet = new PieceAnnotation<boolean>(this.kpuzzle, false);\n    for (const orbitName in this.kpuzzle.definition.orbits) {\n      if (orbitName.startsWith(orbitPrefix)) {\n        pieceSet.stickerings.get(orbitName)!.fill(true);\n      }\n    }\n    return pieceSet;\n  }\n  // trueCounts(pieceSet: PieceSet): Record<string, number> {\n  //   const counts: Record<string, number> = {};\n  //   for (const [orbitName, orbitDef] of Object.entries(this.def.orbits)) {\n  //     let count = 0;\n  //     for (let i = 0; i < orbitDef.numPieces; i++) {\n  //       if (pieceSet.stickerings.get(orbitName)![i]) {\n  //         count++;\n  //       }\n  //     }\n  //     counts[orbitName] = count;\n  //   }\n  //   return counts;\n  // }\n}\n", "import type { PuzzleID } from \"../../twisty\";\n\nconst LL = \"Last Layer\";\nconst LS = \"Last Slot\";\nconst megaAnd3x3x3LL = {\n  \"3x3x3\": LL,\n  megaminx: LL,\n};\nconst megaAnd3x3x3LS = {\n  \"3x3x3\": LS,\n  megaminx: LS,\n};\n\nexport const experimentalStickerings: Record<\n  string,\n  { groups?: Partial<Record<PuzzleID, string>> }\n> = {\n  full: { groups: { \"3x3x3\": \"Stickering\", megaminx: \"Stickering\" } }, // default\n  OLL: { groups: megaAnd3x3x3LL },\n  PLL: { groups: megaAnd3x3x3LL },\n  LL: { groups: megaAnd3x3x3LL },\n  EOLL: { groups: megaAnd3x3x3LL },\n  COLL: { groups: megaAnd3x3x3LL },\n  OCLL: { groups: megaAnd3x3x3LL },\n  CPLL: { groups: megaAnd3x3x3LL },\n  CLL: { groups: megaAnd3x3x3LL },\n  EPLL: { groups: megaAnd3x3x3LL },\n  ELL: { groups: megaAnd3x3x3LL },\n  ZBLL: { groups: megaAnd3x3x3LL },\n  LS: { groups: megaAnd3x3x3LS },\n  ELS: { groups: megaAnd3x3x3LS },\n  CLS: { groups: megaAnd3x3x3LS },\n  ZBLS: { groups: megaAnd3x3x3LS },\n  VLS: { groups: megaAnd3x3x3LS },\n  WVLS: { groups: megaAnd3x3x3LS },\n  F2L: { groups: { \"3x3x3\": \"CFOP (Fridrich)\" } },\n  Daisy: { groups: { \"3x3x3\": \"CFOP (Fridrich)\" } },\n  Cross: { groups: { \"3x3x3\": \"CFOP (Fridrich)\" } },\n  EO: { groups: { \"3x3x3\": \"ZZ\" } },\n  EOline: { groups: { \"3x3x3\": \"ZZ\" } },\n  EOcross: { groups: { \"3x3x3\": \"ZZ\" } },\n  CMLL: { groups: { \"3x3x3\": \"Roux\" } },\n  L10P: { groups: { \"3x3x3\": \"Roux\" } },\n  L6E: { groups: { \"3x3x3\": \"Roux\" } },\n  L6EO: { groups: { \"3x3x3\": \"Roux\" } },\n  \"2x2x2\": { groups: { \"3x3x3\": \"Petrus\" } },\n  \"2x2x3\": { groups: { \"3x3x3\": \"Petrus\" } },\n  L2C: {\n    groups: {\n      \"4x4x4\": \"Reduction\",\n      \"5x5x5\": \"Reduction\",\n      \"6x6x6\": \"Reduction\",\n    },\n  },\n  PBL: {\n    groups: {\n      \"2x2x2\": \"Ortega\",\n    },\n  },\n  \"Void Cube\": { groups: { \"3x3x3\": \"Miscellaneous\" } },\n  invisible: { groups: { \"3x3x3\": \"Miscellaneous\" } },\n  picture: { groups: { \"3x3x3\": \"Miscellaneous\" } },\n  \"centers-only\": { groups: { \"3x3x3\": \"Miscellaneous\" } }, // TODO\n  \"experimental-centers-U\": {},\n  \"experimental-centers-U-D\": {},\n  \"experimental-centers-U-L-D\": {},\n  \"experimental-centers-U-L-B-D\": {},\n  \"experimental-centers\": {},\n  \"experimental-fto-fc\": { groups: { fto: \"Bencisco\" } },\n  \"experimental-fto-f2t\": { groups: { fto: \"Bencisco\" } },\n  \"experimental-fto-sc\": { groups: { fto: \"Bencisco\" } },\n  \"experimental-fto-l2c\": { groups: { fto: \"Bencisco\" } },\n  \"experimental-fto-lbt\": { groups: { fto: \"Bencisco\" } },\n  \"experimental-fto-l3t\": { groups: { fto: \"Bencisco\" } },\n};\n", "import type { ExperimentalStickering, PuzzleID } from \"../../twisty\";\nimport type { PuzzleLoader } from \"../PuzzleLoader\";\nimport {\n  PieceSet,\n  PieceStickering,\n  StickeringMask,\n  PuzzleStickering,\n  StickeringManager,\n} from \"./mask\";\nimport { experimentalStickerings } from \"./puzzle-stickerings\";\n\n// TODO: cache calculations?\nexport async function cubeLikeStickeringMask(\n  puzzleLoader: PuzzleLoader,\n  stickering: ExperimentalStickering,\n): Promise<StickeringMask> {\n  const kpuzzle = await puzzleLoader.kpuzzle();\n  const puzzleStickering = new PuzzleStickering(kpuzzle);\n  const m = new StickeringManager(kpuzzle);\n\n  const LL = (): PieceSet => m.move(\"U\");\n  const orUD = (): PieceSet => m.or(m.moves([\"U\", \"D\"]));\n  const orLR = (): PieceSet => m.or(m.moves([\"L\", \"R\"]));\n  const M = (): PieceSet => m.not(orLR());\n\n  const F2L = (): PieceSet => m.not(LL());\n\n  const CENTERS = (): PieceSet => m.orbitPrefix(\"CENTER\");\n  const EDGES = (): PieceSet => m.orbitPrefix(\"EDGE\");\n  const CORNERS = (): PieceSet =>\n    m.or([\n      m.orbitPrefix(\"CORNER\"),\n      m.orbitPrefix(\"C4RNER\"),\n      m.orbitPrefix(\"C5RNER\"),\n    ]);\n\n  const L6E = (): PieceSet => m.or([M(), m.and([LL(), EDGES()])]);\n  const centerLL = (): PieceSet => m.and([LL(), CENTERS()]);\n\n  const edgeFR = (): PieceSet => m.and([m.and(m.moves([\"F\", \"R\"])), EDGES()]);\n  const cornerDFR = (): PieceSet =>\n    m.and([m.and(m.moves([\"F\", \"R\"])), CORNERS(), m.not(LL())]);\n  const slotFR = (): PieceSet => m.or([cornerDFR(), edgeFR()]);\n\n  function dimF2L(): void {\n    puzzleStickering.set(F2L(), PieceStickering.Dim);\n  }\n\n  function setPLL(): void {\n    puzzleStickering.set(LL(), PieceStickering.PermuteNonPrimary);\n    puzzleStickering.set(centerLL(), PieceStickering.Dim); // For PG\n  }\n\n  function setOLL(): void {\n    puzzleStickering.set(LL(), PieceStickering.IgnoreNonPrimary);\n    puzzleStickering.set(centerLL(), PieceStickering.Regular); // For PG\n  }\n\n  function dimOLL(): void {\n    puzzleStickering.set(LL(), PieceStickering.Ignoriented);\n    puzzleStickering.set(centerLL(), PieceStickering.Dim); // For PG\n  }\n\n  switch (stickering) {\n    case \"full\":\n      break;\n    case \"PLL\": {\n      dimF2L();\n      setPLL();\n      break;\n    }\n    case \"CLS\": {\n      dimF2L();\n      puzzleStickering.set(cornerDFR(), PieceStickering.Regular);\n      puzzleStickering.set(LL(), PieceStickering.Ignoriented);\n      puzzleStickering.set(m.and([LL(), CENTERS()]), PieceStickering.Dim);\n      puzzleStickering.set(\n        m.and([LL(), CORNERS()]),\n        PieceStickering.IgnoreNonPrimary,\n      );\n      break;\n    }\n    case \"OLL\": {\n      dimF2L();\n      setOLL();\n      break;\n    }\n    case \"EOLL\": {\n      dimF2L();\n      setOLL();\n      puzzleStickering.set(m.and([LL(), CORNERS()]), PieceStickering.Ignored);\n      break;\n    }\n    case \"COLL\": {\n      dimF2L();\n      puzzleStickering.set(m.and([LL(), EDGES()]), PieceStickering.Ignoriented);\n      puzzleStickering.set(m.and([LL(), CENTERS()]), PieceStickering.Dim);\n      puzzleStickering.set(m.and([LL(), CORNERS()]), PieceStickering.Regular);\n      break;\n    }\n    case \"OCLL\": {\n      dimF2L();\n      dimOLL();\n      puzzleStickering.set(\n        m.and([LL(), CORNERS()]),\n        PieceStickering.IgnoreNonPrimary,\n      );\n      break;\n    }\n    case \"CPLL\": {\n      dimF2L();\n      puzzleStickering.set(\n        m.and([CORNERS(), LL()]),\n        PieceStickering.PermuteNonPrimary,\n      );\n      puzzleStickering.set(\n        m.and([m.not(CORNERS()), LL()]),\n        PieceStickering.Dim,\n      );\n      break;\n    }\n    case \"CLL\": {\n      dimF2L();\n      puzzleStickering.set(\n        m.not(m.and([CORNERS(), LL()])),\n        PieceStickering.Dim,\n      );\n      break;\n    }\n    case \"EPLL\": {\n      dimF2L();\n      puzzleStickering.set(LL(), PieceStickering.Dim);\n      puzzleStickering.set(\n        m.and([LL(), EDGES()]),\n        PieceStickering.PermuteNonPrimary,\n      );\n      break;\n    }\n    case \"ELL\": {\n      dimF2L();\n      puzzleStickering.set(LL(), PieceStickering.Dim);\n      puzzleStickering.set(m.and([LL(), EDGES()]), PieceStickering.Regular);\n      break;\n    }\n    case \"ELS\": {\n      dimF2L();\n      setOLL();\n      puzzleStickering.set(m.and([LL(), CORNERS()]), PieceStickering.Ignored);\n      puzzleStickering.set(edgeFR(), PieceStickering.Regular);\n      puzzleStickering.set(cornerDFR(), PieceStickering.Ignored);\n      break;\n    }\n    case \"LL\": {\n      dimF2L();\n      break;\n    }\n    case \"F2L\": {\n      puzzleStickering.set(LL(), PieceStickering.Ignored);\n      break;\n    }\n    case \"ZBLL\": {\n      dimF2L();\n      puzzleStickering.set(LL(), PieceStickering.PermuteNonPrimary);\n      puzzleStickering.set(centerLL(), PieceStickering.Dim); // For PG\n      puzzleStickering.set(m.and([LL(), CORNERS()]), PieceStickering.Regular);\n      break;\n    }\n    case \"ZBLS\": {\n      dimF2L();\n      puzzleStickering.set(slotFR(), PieceStickering.Regular);\n      setOLL();\n      puzzleStickering.set(m.and([LL(), CORNERS()]), PieceStickering.Ignored);\n      break;\n    }\n    case \"VLS\": {\n      dimF2L();\n      puzzleStickering.set(slotFR(), PieceStickering.Regular);\n      setOLL();\n      break;\n    }\n    case \"WVLS\": {\n      dimF2L();\n      puzzleStickering.set(slotFR(), PieceStickering.Regular);\n      puzzleStickering.set(m.and([LL(), EDGES()]), PieceStickering.Ignoriented);\n      puzzleStickering.set(m.and([LL(), CENTERS()]), PieceStickering.Dim);\n      puzzleStickering.set(\n        m.and([LL(), CORNERS()]),\n        PieceStickering.IgnoreNonPrimary,\n      );\n      break;\n    }\n    case \"LS\": {\n      dimF2L();\n      puzzleStickering.set(slotFR(), PieceStickering.Regular);\n      puzzleStickering.set(LL(), PieceStickering.Ignored);\n      puzzleStickering.set(centerLL(), PieceStickering.Dim);\n      break;\n    }\n    case \"EO\": {\n      puzzleStickering.set(CORNERS(), PieceStickering.Ignored);\n      puzzleStickering.set(\n        EDGES(),\n        PieceStickering.OrientationWithoutPermutation,\n      );\n      break;\n    }\n    case \"EOline\": {\n      puzzleStickering.set(CORNERS(), PieceStickering.Ignored);\n      puzzleStickering.set(\n        EDGES(),\n        PieceStickering.OrientationWithoutPermutation,\n      );\n      puzzleStickering.set(m.and(m.moves([\"D\", \"M\"])), PieceStickering.Regular);\n      break;\n    }\n    case \"EOcross\": {\n      puzzleStickering.set(\n        EDGES(),\n        PieceStickering.OrientationWithoutPermutation,\n      );\n      puzzleStickering.set(m.move(\"D\"), PieceStickering.Regular);\n      puzzleStickering.set(CORNERS(), PieceStickering.Ignored);\n      break;\n    }\n    case \"CMLL\": {\n      puzzleStickering.set(F2L(), PieceStickering.Dim);\n      puzzleStickering.set(L6E(), PieceStickering.Ignored);\n      puzzleStickering.set(m.and([LL(), CORNERS()]), PieceStickering.Regular);\n      break;\n    }\n    case \"L10P\": {\n      puzzleStickering.set(m.not(L6E()), PieceStickering.Dim);\n      puzzleStickering.set(m.and([CORNERS(), LL()]), PieceStickering.Regular);\n      break;\n    }\n    case \"L6E\": {\n      puzzleStickering.set(m.not(L6E()), PieceStickering.Dim);\n      break;\n    }\n    case \"L6EO\": {\n      puzzleStickering.set(m.not(L6E()), PieceStickering.Dim);\n      puzzleStickering.set(\n        L6E(),\n        PieceStickering.OrientationWithoutPermutation,\n      );\n      puzzleStickering.set(\n        m.and([CENTERS(), orUD()]),\n        PieceStickering.OrientationStickers,\n      ); // For PG\n      break;\n    }\n    case \"Daisy\": {\n      puzzleStickering.set(m.all(), PieceStickering.Ignored);\n      puzzleStickering.set(CENTERS(), PieceStickering.Dim);\n      puzzleStickering.set(\n        m.and([m.move(\"D\"), CENTERS()]),\n        PieceStickering.Regular,\n      );\n      puzzleStickering.set(\n        m.and([m.move(\"U\"), EDGES()]),\n        PieceStickering.IgnoreNonPrimary,\n      );\n      break;\n    }\n    case \"Cross\": {\n      puzzleStickering.set(m.all(), PieceStickering.Ignored);\n      puzzleStickering.set(CENTERS(), PieceStickering.Dim);\n      puzzleStickering.set(\n        m.and([m.move(\"D\"), CENTERS()]),\n        PieceStickering.Regular,\n      );\n      puzzleStickering.set(\n        m.and([m.move(\"D\"), EDGES()]),\n        PieceStickering.Regular,\n      );\n      break;\n    }\n    case \"2x2x2\": {\n      puzzleStickering.set(\n        m.or(m.moves([\"U\", \"F\", \"R\"])),\n        PieceStickering.Ignored,\n      );\n      puzzleStickering.set(\n        m.and([m.or(m.moves([\"U\", \"F\", \"R\"])), CENTERS()]),\n        PieceStickering.Dim,\n      );\n      break;\n    }\n    case \"2x2x3\": {\n      puzzleStickering.set(m.all(), PieceStickering.Dim);\n      puzzleStickering.set(\n        m.or(m.moves([\"U\", \"F\", \"R\"])),\n        PieceStickering.Ignored,\n      );\n      puzzleStickering.set(\n        m.and([m.or(m.moves([\"U\", \"F\", \"R\"])), CENTERS()]),\n        PieceStickering.Dim,\n      );\n      puzzleStickering.set(\n        m.and([m.move(\"F\"), m.not(m.or(m.moves([\"U\", \"R\"])))]),\n        PieceStickering.Regular,\n      );\n      break;\n    }\n    case \"L2C\": {\n      puzzleStickering.set(\n        m.or(m.moves([\"L\", \"R\", \"B\", \"D\"])),\n        PieceStickering.Dim,\n      );\n      puzzleStickering.set(m.not(CENTERS()), PieceStickering.Ignored);\n      break;\n    }\n    case \"PBL\": {\n      puzzleStickering.set(m.all(), PieceStickering.Ignored);\n      puzzleStickering.set(\n        m.or(m.moves([\"U\", \"D\"])),\n        PieceStickering.PermuteNonPrimary,\n      );\n      break;\n    }\n    case \"Void Cube\": {\n      puzzleStickering.set(CENTERS(), PieceStickering.Invisible);\n      break;\n    }\n    case \"picture\":\n    // fallthrough\n    case \"invisible\": {\n      puzzleStickering.set(m.all(), PieceStickering.Invisible);\n      break;\n    }\n    case \"centers-only\": {\n      puzzleStickering.set(m.not(CENTERS()), PieceStickering.Ignored);\n      break;\n    }\n    default:\n      console.warn(\n        `Unsupported stickering for ${puzzleLoader.id}: ${stickering}. Setting all pieces to dim.`,\n      );\n      puzzleStickering.set(m.and(m.moves([])), PieceStickering.Dim);\n  }\n  return puzzleStickering.toStickeringMask();\n}\n\nexport async function cubeLikeStickeringList(\n  puzzleID: PuzzleID,\n  options?: { use3x3x3Fallbacks: boolean },\n): Promise<ExperimentalStickering[]> {\n  const stickerings: ExperimentalStickering[] = [];\n  const stickeringsFallback: ExperimentalStickering[] = [];\n  for (const [name, info] of Object.entries(experimentalStickerings)) {\n    if (info.groups) {\n      if (puzzleID in info.groups) {\n        stickerings.push(name);\n      } else if (options?.use3x3x3Fallbacks && \"3x3x3\" in info.groups) {\n        stickeringsFallback.push(name);\n      }\n    }\n  }\n  return stickerings.concat(stickeringsFallback);\n}\n", "export function getCached<T>(getValue: () => Promise<T>): () => Promise<T> {\n  let cachedPromise: Promise<T> | null = null;\n  return (): Promise<T> => {\n    return (cachedPromise ??= getValue());\n  };\n}\n", "// @ts-nocheck\n\nexport class PLazy<T> extends Promise<T> {\n  constructor(executor) {\n    super((resolve) => {\n      resolve();\n    });\n\n    this._executor = executor;\n  }\n\n  static from(function_) {\n    return new PLazy((resolve) => {\n      resolve(function_());\n    });\n  }\n\n  static resolve(value) {\n    return new PLazy((resolve) => {\n      resolve(value);\n    });\n  }\n\n  static reject(error) {\n    return new PLazy((_resolve, reject) => {\n      reject(error);\n    });\n  }\n\n  then(onFulfilled, onRejected) {\n    this._promise = this._promise || new Promise(this._executor);\n\n    return this._promise.then(onFulfilled, onRejected);\n  }\n\n  catch(onRejected) {\n    this._promise = this._promise || new Promise(this._executor);\n\n    return this._promise.catch(onRejected);\n  }\n}\n\nexport function from<T>(function_): Promise<T> {\n  return new PLazy((resolve) => {\n    resolve(function_());\n  });\n}\n", "import { KPuzzle, KPuzzleDefinition } from \"../../kpuzzle\";\nimport type { PuzzleGeometry } from \"../../puzzle-geometry\";\nimport type { ExperimentalStickering, PuzzleID } from \"../../twisty\";\nimport type { PuzzleLoader } from \"../PuzzleLoader\";\nimport type { StickeringMask } from \"../stickerings/mask\";\nimport {\n  cubeLikeStickeringList,\n  cubeLikeStickeringMask,\n} from \"../stickerings/cube-like-stickerings\";\nimport { getCached } from \"./lazy-cached\";\nimport { Move, PuzzleSpecificSimplifyOptions, QuantumMove } from \"../../alg\";\nimport { PLazy } from \"../../vendor/mit/p-lazy/p-lazy\";\n\n// TODO: modify this to handle TwistyPlayer options\nexport async function asyncGetPuzzleGeometry(\n  puzzleName: string,\n): Promise<PuzzleGeometry> {\n  const puzzleGeometry = await import(\"../../puzzle-geometry\");\n  return puzzleGeometry.getPuzzleGeometryByName(puzzleName, {\n    allMoves: true,\n    orientCenters: true,\n    addRotations: true,\n  });\n}\n\n// TODO: can we cache the puzzleGeometry to avoid duplicate calls, without\n// wasting memory? Maybe just save the latest one for successive calls about the\n// same puzzle?\nexport async function asyncGetKPuzzle(\n  pgPromise: Promise<PuzzleGeometry>,\n  puzzleName: string,\n): Promise<KPuzzle> {\n  const pg = await pgPromise;\n  const kpuzzleDefinition: KPuzzleDefinition = pg.getKPuzzleDefinition(true);\n  kpuzzleDefinition.name = puzzleName;\n  const puzzleGeometry = await import(\"../../puzzle-geometry\");\n  const pgNotation = new puzzleGeometry.ExperimentalPGNotation(\n    pg,\n    pg.getOrbitsDef(true),\n  );\n  return new KPuzzle(kpuzzleDefinition, {\n    experimentalPGNotation: pgNotation,\n  });\n}\n\nexport function asyncLazyKPuzzleGetter(\n  pgPromise: Promise<PuzzleGeometry>,\n  puzzleName: string,\n): () => Promise<KPuzzle> {\n  return getCached(() => asyncGetKPuzzle(pgPromise, puzzleName));\n}\n\ntype PuzzleLoaderConstructorArgs = {\n  pgID?: string;\n  id: string;\n  fullName: string;\n  inventedBy?: string[];\n  inventionYear?: number;\n};\n\nexport class PGPuzzleLoader implements PuzzleLoader {\n  pgId?: string;\n  id: string;\n  fullName: string;\n  inventedBy?: string[];\n  inventionYear?: number;\n  constructor(info: PuzzleLoaderConstructorArgs) {\n    this.pgId = info.pgID;\n    this.id = info.id;\n    this.fullName = info.fullName;\n    this.inventedBy = info.inventedBy;\n    this.inventionYear = info.inventionYear;\n  }\n\n  #cachedPG: Promise<PuzzleGeometry> | undefined;\n  pg(): Promise<PuzzleGeometry> {\n    return (this.#cachedPG ??= asyncGetPuzzleGeometry(this.pgId ?? this.id));\n  }\n\n  #cachedKPuzzle: Promise<KPuzzle> | undefined;\n  kpuzzle(): Promise<KPuzzle> {\n    return (this.#cachedKPuzzle ??= asyncGetKPuzzle(this.pg(), this.id));\n  }\n\n  #cachedSVG: Promise<string> | undefined;\n  svg(): Promise<string> {\n    return (this.#cachedSVG ??= (async () =>\n      (await this.pg()).generatesvg())());\n  }\n\n  puzzleSpecificSimplifyOptionsPromise = puzzleSpecificSimplifyOptionsPromise(\n    this.kpuzzle.bind(this),\n  );\n}\n\nexport class CubePGPuzzleLoader extends PGPuzzleLoader {\n  stickeringMask(stickering: ExperimentalStickering): Promise<StickeringMask> {\n    return cubeLikeStickeringMask(this, stickering);\n  }\n  stickerings = () =>\n    cubeLikeStickeringList(this.id as PuzzleID, { use3x3x3Fallbacks: true });\n}\n\nexport function puzzleSpecificSimplifyOptionsPromise(\n  kpuzzlePromiseFn: () => Promise<KPuzzle>,\n): Promise<PuzzleSpecificSimplifyOptions> {\n  return new PLazy(\n    async (resolve: (options: PuzzleSpecificSimplifyOptions) => void) => {\n      const kpuzzle = await kpuzzlePromiseFn();\n      resolve({\n        quantumMoveOrder: (m: QuantumMove) => {\n          return kpuzzle.moveToTransformation(new Move(m)).repetitionOrder();\n        },\n      });\n    },\n  );\n}\n", "import type { KPuzzleDefinition } from \"../../../../kpuzzle\";\n\nexport const cube3x3x3KPuzzleDefinition: KPuzzleDefinition = {\n  name: \"3x3x3\",\n  orbits: {\n    EDGES: { numPieces: 12, numOrientations: 2 },\n    CORNERS: { numPieces: 8, numOrientations: 3 },\n    CENTERS: { numPieces: 6, numOrientations: 4 },\n  },\n  startStateData: {\n    EDGES: {\n      pieces: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\n      orientation: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    },\n    CORNERS: {\n      pieces: [0, 1, 2, 3, 4, 5, 6, 7],\n      orientation: [0, 0, 0, 0, 0, 0, 0, 0],\n    },\n    CENTERS: {\n      pieces: [0, 1, 2, 3, 4, 5],\n      orientation: [0, 0, 0, 0, 0, 0],\n    },\n  },\n  moves: {\n    U: {\n      EDGES: {\n        permutation: [1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10, 11],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CORNERS: {\n        permutation: [1, 2, 3, 0, 4, 5, 6, 7],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CENTERS: {\n        permutation: [0, 1, 2, 3, 4, 5],\n        orientation: [1, 0, 0, 0, 0, 0],\n      },\n    },\n    y: {\n      EDGES: {\n        permutation: [1, 2, 3, 0, 5, 6, 7, 4, 10, 8, 11, 9],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1],\n      },\n      CORNERS: {\n        permutation: [1, 2, 3, 0, 7, 4, 5, 6],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CENTERS: {\n        permutation: [0, 2, 3, 4, 1, 5],\n        orientation: [1, 0, 0, 0, 0, 3],\n      },\n    },\n    x: {\n      EDGES: {\n        permutation: [4, 8, 0, 9, 6, 10, 2, 11, 5, 7, 1, 3],\n        orientation: [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0],\n      },\n      CORNERS: {\n        permutation: [4, 0, 3, 5, 7, 6, 2, 1],\n        orientation: [2, 1, 2, 1, 1, 2, 1, 2],\n      },\n      CENTERS: {\n        permutation: [2, 1, 5, 3, 0, 4],\n        orientation: [0, 3, 0, 1, 2, 2],\n      },\n    },\n    L: {\n      EDGES: {\n        permutation: [0, 1, 2, 11, 4, 5, 6, 9, 8, 3, 10, 7],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CORNERS: {\n        permutation: [0, 1, 6, 2, 4, 3, 5, 7],\n        orientation: [0, 0, 2, 1, 0, 2, 1, 0],\n      },\n      CENTERS: {\n        permutation: [0, 1, 2, 3, 4, 5],\n        orientation: [0, 1, 0, 0, 0, 0],\n      },\n    },\n    F: {\n      EDGES: {\n        permutation: [9, 1, 2, 3, 8, 5, 6, 7, 0, 4, 10, 11],\n        orientation: [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0],\n      },\n      CORNERS: {\n        permutation: [3, 1, 2, 5, 0, 4, 6, 7],\n        orientation: [1, 0, 0, 2, 2, 1, 0, 0],\n      },\n      CENTERS: {\n        permutation: [0, 1, 2, 3, 4, 5],\n        orientation: [0, 0, 1, 0, 0, 0],\n      },\n    },\n    R: {\n      EDGES: {\n        permutation: [0, 8, 2, 3, 4, 10, 6, 7, 5, 9, 1, 11],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CORNERS: {\n        permutation: [4, 0, 2, 3, 7, 5, 6, 1],\n        orientation: [2, 1, 0, 0, 1, 0, 0, 2],\n      },\n      CENTERS: {\n        permutation: [0, 1, 2, 3, 4, 5],\n        orientation: [0, 0, 0, 1, 0, 0],\n      },\n    },\n    B: {\n      EDGES: {\n        permutation: [0, 1, 10, 3, 4, 5, 11, 7, 8, 9, 6, 2],\n        orientation: [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1],\n      },\n      CORNERS: {\n        permutation: [0, 7, 1, 3, 4, 5, 2, 6],\n        orientation: [0, 2, 1, 0, 0, 0, 2, 1],\n      },\n      CENTERS: {\n        permutation: [0, 1, 2, 3, 4, 5],\n        orientation: [0, 0, 0, 0, 1, 0],\n      },\n    },\n    D: {\n      EDGES: {\n        permutation: [0, 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 11],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CORNERS: {\n        permutation: [0, 1, 2, 3, 5, 6, 7, 4],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CENTERS: {\n        permutation: [0, 1, 2, 3, 4, 5],\n        orientation: [0, 0, 0, 0, 0, 1],\n      },\n    },\n    z: {\n      EDGES: {\n        permutation: [9, 3, 11, 7, 8, 1, 10, 5, 0, 4, 2, 6],\n        orientation: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n      },\n      CORNERS: {\n        permutation: [3, 2, 6, 5, 0, 4, 7, 1],\n        orientation: [1, 2, 1, 2, 2, 1, 2, 1],\n      },\n      CENTERS: {\n        permutation: [1, 5, 2, 0, 4, 3],\n        orientation: [1, 1, 1, 1, 3, 1],\n      },\n    },\n    M: {\n      EDGES: {\n        permutation: [2, 1, 6, 3, 0, 5, 4, 7, 8, 9, 10, 11],\n        orientation: [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0],\n      },\n      CORNERS: {\n        permutation: [0, 1, 2, 3, 4, 5, 6, 7],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CENTERS: {\n        permutation: [4, 1, 0, 3, 5, 2],\n        orientation: [2, 0, 0, 0, 2, 0],\n      },\n    },\n    E: {\n      EDGES: {\n        permutation: [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 8, 10],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1],\n      },\n      CORNERS: {\n        permutation: [0, 1, 2, 3, 4, 5, 6, 7],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CENTERS: {\n        permutation: [0, 4, 1, 2, 3, 5],\n        orientation: [0, 0, 0, 0, 0, 0],\n      },\n    },\n    S: {\n      EDGES: {\n        permutation: [0, 3, 2, 7, 4, 1, 6, 5, 8, 9, 10, 11],\n        orientation: [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0],\n      },\n      CORNERS: {\n        permutation: [0, 1, 2, 3, 4, 5, 6, 7],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CENTERS: {\n        permutation: [1, 5, 2, 0, 4, 3],\n        orientation: [1, 1, 0, 1, 0, 1],\n      },\n    },\n    u: {\n      EDGES: {\n        permutation: [1, 2, 3, 0, 4, 5, 6, 7, 10, 8, 11, 9],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1],\n      },\n      CORNERS: {\n        permutation: [1, 2, 3, 0, 4, 5, 6, 7],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CENTERS: {\n        permutation: [0, 2, 3, 4, 1, 5],\n        orientation: [1, 0, 0, 0, 0, 0],\n      },\n    },\n    l: {\n      EDGES: {\n        permutation: [2, 1, 6, 11, 0, 5, 4, 9, 8, 3, 10, 7],\n        orientation: [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0],\n      },\n      CORNERS: {\n        permutation: [0, 1, 6, 2, 4, 3, 5, 7],\n        orientation: [0, 0, 2, 1, 0, 2, 1, 0],\n      },\n      CENTERS: {\n        permutation: [4, 1, 0, 3, 5, 2],\n        orientation: [2, 1, 0, 0, 2, 0],\n      },\n    },\n    f: {\n      EDGES: {\n        permutation: [9, 3, 2, 7, 8, 1, 6, 5, 0, 4, 10, 11],\n        orientation: [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0],\n      },\n      CORNERS: {\n        permutation: [3, 1, 2, 5, 0, 4, 6, 7],\n        orientation: [1, 0, 0, 2, 2, 1, 0, 0],\n      },\n      CENTERS: {\n        permutation: [1, 5, 2, 0, 4, 3],\n        orientation: [1, 1, 1, 1, 0, 1],\n      },\n    },\n    r: {\n      EDGES: {\n        permutation: [4, 8, 0, 3, 6, 10, 2, 7, 5, 9, 1, 11],\n        orientation: [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0],\n      },\n      CORNERS: {\n        permutation: [4, 0, 2, 3, 7, 5, 6, 1],\n        orientation: [2, 1, 0, 0, 1, 0, 0, 2],\n      },\n      CENTERS: {\n        permutation: [2, 1, 5, 3, 0, 4],\n        orientation: [0, 0, 0, 1, 2, 2],\n      },\n    },\n    b: {\n      EDGES: {\n        permutation: [0, 5, 10, 1, 4, 7, 11, 3, 8, 9, 6, 2],\n        orientation: [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1],\n      },\n      CORNERS: {\n        permutation: [0, 7, 1, 3, 4, 5, 2, 6],\n        orientation: [0, 2, 1, 0, 0, 0, 2, 1],\n      },\n      CENTERS: {\n        permutation: [3, 0, 2, 5, 4, 1],\n        orientation: [3, 3, 0, 3, 1, 3],\n      },\n    },\n    d: {\n      EDGES: {\n        permutation: [0, 1, 2, 3, 7, 4, 5, 6, 9, 11, 8, 10],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1],\n      },\n      CORNERS: {\n        permutation: [0, 1, 2, 3, 5, 6, 7, 4],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CENTERS: {\n        permutation: [0, 4, 1, 2, 3, 5],\n        orientation: [0, 0, 0, 0, 0, 1],\n      },\n    },\n  },\n};\n\ncube3x3x3KPuzzleDefinition.experimentalDerivedMoves = {\n  Uw: \"u\",\n  Lw: \"l\",\n  Fw: \"f\",\n  Rw: \"r\",\n  Bw: \"b\",\n  Dw: \"d\",\n\n  Uv: \"y\",\n  Lv: \"x'\",\n  Fv: \"z\",\n  Rv: \"x\",\n  Bv: \"z'\",\n  Dv: \"y'\",\n\n  \"2U\": \"u U'\",\n  \"2L\": \"l L'\",\n  \"2F\": \"f F'\",\n  \"2R\": \"r R'\",\n  \"2B\": \"b B'\",\n  \"2D\": \"d D'\",\n};\n", "import type { PuzzleSpecificSimplifyOptions } from \"../alg\";\nimport type { AppendOptions } from \"../alg/simplify\";\nimport type { KPuzzle } from \"../kpuzzle\";\nimport type { PuzzleGeometry } from \"../puzzle-geometry\";\nimport type { ExperimentalStickering } from \"../twisty\";\nimport type { StickeringMask } from \"./stickerings/mask\";\n\nexport interface PuzzleLoader {\n  id: string;\n  // shortName?: string;\n  fullName: string;\n  inventedBy?: string[];\n  inventionYear?: number; // TODO: date?\n  /** @deprecated */\n  def?: never;\n  kpuzzle: () => Promise<KPuzzle>; // TODO\n  svg: () => Promise<string>;\n  llSVG?: () => Promise<string>;\n  pg?: () => Promise<PuzzleGeometry>;\n  stickeringMask?: (\n    stickering: ExperimentalStickering,\n  ) => Promise<StickeringMask>;\n  stickerings?: () => Promise<ExperimentalStickering[]>;\n  puzzleSpecificSimplifyOptions?: PuzzleSpecificSimplifyOptions;\n  puzzleSpecificSimplifyOptionsPromise?: Promise<PuzzleSpecificSimplifyOptions>; // TODO\n}\n\n// TODO: consolidate the `puzzleSpecificSimplifyOptionsPromise` with `puzzleSpecificSimplifyOptions` somehow, so that we don't have to do this.\nexport async function getPartialAppendOptionsForPuzzleSpecificSimplifyOptions(\n  puzzleLoader: PuzzleLoader,\n): Promise<AppendOptions> {\n  const puzzleSpecificSimplifyOptions =\n    await (puzzleLoader.puzzleSpecificSimplifyOptions ??\n      puzzleLoader.puzzleSpecificSimplifyOptionsPromise);\n  if (!puzzleSpecificSimplifyOptions) {\n    return {};\n  }\n  return { puzzleLoader: { puzzleSpecificSimplifyOptions } };\n}\n", "import { Alg } from \"../../../../alg\";\nimport type { KPuzzle, KState, KTransformation } from \"../../../../kpuzzle\";\n\nexport function puzzleOrientation2x2x2Idx(state: KState): number {\n  const inverse = state.experimentalToTransformation()!.invert();\n\n  const inverseDFL = inverse.transformationData[\"CORNERS\"];\n  return inverseDFL.permutation[6] * 3 + inverseDFL.orientation[6];\n}\n\nconst puzzleOrientationCacheRaw: {\n  transformation: KTransformation;\n  alg: Alg;\n}[] = new Array<KTransformation>(24) as any;\n\nconst puzzleOrientationCacheInitialized = false;\n// We rely on the (first) caller to pass in the `KPuzzle`, so that we don't need to get our own synchronous reference.\nexport function puzzleOrientation2x2x2Cache(\n  kpuzzle: KPuzzle,\n): typeof puzzleOrientationCacheRaw {\n  if (!puzzleOrientationCacheInitialized) {\n    {\n      const uAlgs: Alg[] = [\"\", \"z\", \"x\", \"z'\", \"x'\", \"x2\"].map((s) =>\n        Alg.fromString(s),\n      );\n      const yAlg = new Alg(\"y\");\n      for (const uAlg of uAlgs) {\n        let transformation = kpuzzle.algToTransformation(uAlg);\n        for (let i = 0; i < 4; i++) {\n          transformation = transformation.applyAlg(yAlg);\n          const idx = puzzleOrientation2x2x2Idx(transformation.toKState());\n          puzzleOrientationCacheRaw[idx] = {\n            transformation: transformation.invert(),\n            alg: uAlg.concat(yAlg),\n          };\n        }\n      }\n    }\n  }\n  return puzzleOrientationCacheRaw;\n}\n\nexport function normalize2x2x2Orientation(state: KState): {\n  normalizedState: KState;\n  normalizationAlg: Alg;\n} {\n  const idx = puzzleOrientation2x2x2Idx(state);\n  const { transformation, alg } = puzzleOrientation2x2x2Cache(state.kpuzzle)[\n    idx\n  ];\n  return {\n    normalizedState: state.applyTransformation(transformation),\n    normalizationAlg: alg.invert(),\n  };\n}\n\n// The `options` argument is required for now, because we haven't yet come up\n// with a general way to specify different kinds of solved for the same puzle.\nexport function experimentalIs2x2x2Solved(\n  state: KState,\n  options: {\n    ignorePuzzleOrientation: boolean;\n  },\n): boolean {\n  if (options.ignorePuzzleOrientation) {\n    state = normalize2x2x2Orientation(state).normalizedState;\n  }\n  return !!state.experimentalToTransformation()!.isIdentityTransformation(); // TODO: Compare to start state instead?\n}\n", "import { KPuzzle, KPuzzleDefinition } from \"../kpuzzle\";\nimport type { PuzzleGeometry } from \"../puzzle-geometry\";\nimport type { PuzzleDescriptionString } from \"../puzzle-geometry/PGPuzzles\";\nimport { puzzleSpecificSimplifyOptionsPromise } from \"./async/async-pg3d\";\nimport type { PuzzleLoader } from \"./PuzzleLoader\";\n\n// TODO: modify this to handle TwistyPlayer options\nexport async function descAsyncGetPuzzleGeometry(\n  desc: PuzzleDescriptionString,\n): Promise<PuzzleGeometry> {\n  const puzzleGeometry = await import(\"../puzzle-geometry\");\n  return puzzleGeometry.getPuzzleGeometryByDesc(desc, {\n    allMoves: true,\n    orientCenters: true,\n    addRotations: true,\n  });\n}\n\n// TODO: dedup with `cubing/puzzles`\nexport async function asyncGetKPuzzle(\n  desc: PuzzleDescriptionString,\n): Promise<KPuzzle> {\n  const pg = await descAsyncGetPuzzleGeometry(desc);\n  const kpuzzleDefinition: KPuzzleDefinition = pg.getKPuzzleDefinition(true);\n  kpuzzleDefinition.name = `description: ${desc}`;\n  const puzzleGeometry = await import(\"../puzzle-geometry\");\n  const pgNotation = new puzzleGeometry.ExperimentalPGNotation(\n    pg,\n    pg.getOrbitsDef(true),\n  );\n  return new KPuzzle(kpuzzleDefinition, {\n    experimentalPGNotation: pgNotation,\n  });\n}\n\n// TODO: Can we avoid relying on IDs to deduplicate work at higher levels?\nlet nextCustomID = 1;\n\nexport function customPGPuzzleLoader(\n  desc: PuzzleDescriptionString,\n  info?: {\n    fullName?: string;\n    inventedBy?: string[];\n    inventionYear?: number;\n  },\n): PuzzleLoader {\n  const customID = nextCustomID++;\n  let cachedKPuzzle: Promise<KPuzzle> | null = null;\n  const kpuzzlePromiseFn = async () => {\n    return (cachedKPuzzle ??= asyncGetKPuzzle(desc));\n  };\n  const puzzleLoader: PuzzleLoader = {\n    id: `custom-${customID}`,\n    fullName: info?.fullName ?? `Custom Puzzle (instance #${customID})`,\n    kpuzzle: kpuzzlePromiseFn,\n    svg: async () => {\n      const pg = await descAsyncGetPuzzleGeometry(desc);\n      return pg.generatesvg();\n    },\n    pg: async () => {\n      return descAsyncGetPuzzleGeometry(desc);\n    },\n    puzzleSpecificSimplifyOptionsPromise:\n      puzzleSpecificSimplifyOptionsPromise(kpuzzlePromiseFn),\n  };\n  if (info?.inventedBy) {\n    puzzleLoader.inventedBy = info.inventedBy;\n  }\n  if (info?.inventionYear) {\n    puzzleLoader.inventionYear = info.inventionYear;\n  }\n  return puzzleLoader;\n}\n", "import { KPuzzle } from \"../../kpuzzle\";\nimport { cube3x3x3KPuzzleDefinition as experimentalCube3x3x3KPuzzleDefinition } from \"../implementations/dynamic/3x3x3/3x3x3.kpuzzle.json\";\nimport { experimentalIs3x3x3Solved } from \"../implementations/dynamic/3x3x3/puzzle-orientation\";\nexport { getPartialAppendOptionsForPuzzleSpecificSimplifyOptions } from \"../PuzzleLoader\";\nexport { experimentalCube3x3x3KPuzzleDefinition };\n\n/** @deprecated */\nexport const experimental3x3x3KPuzzle = new KPuzzle(\n  experimentalCube3x3x3KPuzzleDefinition,\n);\nexperimentalCube3x3x3KPuzzleDefinition.experimentalIsStateSolved =\n  experimentalIs3x3x3Solved;\n\nexport {\n  experimentalIs3x3x3Solved,\n  normalize3x3x3Orientation as experimentalNormalize3x3x3Orientation,\n  puzzleOrientation3x3x3Cache as experimentalPuzzleOrientation3x3x3Cache,\n  puzzleOrientation3x3x3Idx as experimentalPuzzleOrientation3x3x3Idx,\n} from \"../implementations/dynamic/3x3x3/puzzle-orientation\"; // TODO: Actually dynamic\nexport { experimentalStickerings } from \"../stickerings/puzzle-stickerings\";\n\nexport {\n  experimentalIs2x2x2Solved,\n  normalize2x2x2Orientation as experimentalNormalize2x2x2Orientation,\n  puzzleOrientation2x2x2Cache as experimentalPuzzleOrientation2x2x2Cache,\n  puzzleOrientation2x2x2Idx as experimentalPuzzleOrientation2x2x2Idx,\n} from \"../implementations/dynamic/2x2x2/puzzle-orientation\"; // TODO: Actually dynamic\n\nexport { customPGPuzzleLoader as experimentalCustomPGPuzzleLoader } from \"../customPGPuzzleLoader\";\nexport { getFaceletStickeringMask as experimentalGetFaceletStickeringMask } from \"../stickerings/mask\";\nexport type {\n  PieceStickeringMask as ExperimentalPieceStickeringMask,\n  FaceletMeshStickeringMask as ExperimentalFaceletMeshStickeringMask,\n  StickeringMask as ExperimentalStickeringMask,\n} from \"../stickerings/mask\";\nexport {\n  getPieceStickeringMask as experimentalGetPieceStickeringMask,\n  PieceStickering as ExperimentalPieceStickering,\n} from \"../stickerings/mask\";\n", "import { Alg } from \"../../../../alg\";\nimport { KState, KTransformation } from \"../../../../kpuzzle\";\nimport { experimental3x3x3KPuzzle } from \"../../../cubing-private\";\n\nexport function puzzleOrientation3x3x3Idx(state: KState): [number, number] {\n  const idxU = state.stateData[\"CENTERS\"].pieces[0];\n  const idxD = state.stateData[\"CENTERS\"].pieces[5];\n  const unadjustedIdxL = state.stateData[\"CENTERS\"].pieces[1];\n  let idxL = unadjustedIdxL;\n  if (idxU < unadjustedIdxL) {\n    idxL--;\n  }\n  if (idxD < unadjustedIdxL) {\n    idxL--;\n  }\n  return [idxU, idxL];\n}\n\nconst puzzleOrientationCacheRaw: KTransformation[][] = new Array(6)\n  .fill(0)\n  .map(() => {\n    return new Array<KTransformation>(6);\n  });\n\nconst puzzleOrientationCacheInitialized = false;\nexport function puzzleOrientation3x3x3Cache(): KTransformation[][] {\n  if (!puzzleOrientationCacheInitialized) {\n    // We use a new block to avoid keeping a reference to temporary vars.\n    // kpuzzle todo\n    {\n      const uAlgs: Alg[] = [\"\", \"z\", \"x\", \"z'\", \"x'\", \"x2\"].map((s) =>\n        Alg.fromString(s),\n      );\n      const yAlg = new Alg(\"y\");\n      for (const uAlg of uAlgs) {\n        let transformation = experimental3x3x3KPuzzle.algToTransformation(uAlg);\n        for (let i = 0; i < 4; i++) {\n          transformation = transformation.applyAlg(yAlg);\n          const [idxU, idxL] = puzzleOrientation3x3x3Idx(\n            transformation.toKState(),\n          );\n          puzzleOrientationCacheRaw[idxU][idxL] = transformation.invert();\n        }\n      }\n    }\n  }\n  return puzzleOrientationCacheRaw;\n}\n\nexport function normalize3x3x3Orientation(state: KState): KState {\n  const [idxU, idxL] = puzzleOrientation3x3x3Idx(state);\n  const orientationTransformation = puzzleOrientation3x3x3Cache()[idxU][idxL];\n  return state.applyTransformation(orientationTransformation);\n}\n\n// The `options` argument is required for now, because we haven't yet come up\n// with a general way to specify different kinds of solved for the same puzle.\nexport function experimentalIs3x3x3Solved(\n  state: KState,\n  options: {\n    ignorePuzzleOrientation: boolean;\n    ignoreCenterOrientation: boolean;\n  },\n): boolean {\n  if (options.ignorePuzzleOrientation) {\n    state = normalize3x3x3Orientation(state);\n  }\n  if (options.ignoreCenterOrientation) {\n    state = new KState(state.kpuzzle, {\n      EDGES: state.stateData.EDGES,\n      CORNERS: state.stateData.CORNERS,\n      CENTERS: {\n        pieces: state.stateData.CENTERS.pieces,\n        orientation: new Array(6).fill(0),\n      },\n    });\n  }\n  return !!state.experimentalToTransformation()?.isIdentityTransformation(); // TODO: Compare to start state instead?\n}\n", "import type { PuzzleID } from \"../twisty\";\n\ninterface EventInfo {\n  puzzleID: PuzzleID;\n  eventName: string;\n}\n\nexport const wcaEvents: Record<string, EventInfo> = {\n  \"333\": { puzzleID: \"3x3x3\", eventName: \"3x3x3 Cube\" },\n  \"222\": { puzzleID: \"2x2x2\", eventName: \"2x2x2 Cube\" },\n  \"444\": { puzzleID: \"4x4x4\", eventName: \"4x4x4 Cube\" },\n  \"555\": { puzzleID: \"5x5x5\", eventName: \"5x5x5 Cube\" },\n  \"666\": { puzzleID: \"6x6x6\", eventName: \"6x6x6 Cube\" },\n  \"777\": { puzzleID: \"7x7x7\", eventName: \"7x7x7 Cube\" },\n  \"333bf\": { puzzleID: \"3x3x3\", eventName: \"3x3x3 Blindfolded\" },\n  \"333fm\": { puzzleID: \"3x3x3\", eventName: \"3x3x3 Fewest Moves\" },\n  \"333oh\": { puzzleID: \"3x3x3\", eventName: \"3x3x3 One-Handed\" },\n  clock: { puzzleID: \"clock\", eventName: \"Clock\" },\n  minx: { puzzleID: \"megaminx\", eventName: \"Megaminx\" },\n  pyram: { puzzleID: \"pyraminx\", eventName: \"Pyraminx\" },\n  skewb: { puzzleID: \"skewb\", eventName: \"Skewb\" },\n  sq1: { puzzleID: \"square1\", eventName: \"Square-1\" },\n  \"444bf\": { puzzleID: \"4x4x4\", eventName: \"4x4x4 Blindfolded\" },\n  \"555bf\": { puzzleID: \"5x5x5\", eventName: \"5x5x5 Blindfolded\" },\n  \"333mb\": { puzzleID: \"3x3x3\", eventName: \"3x3x3 Multi-Blind\" },\n};\n\n/** @category Event Info */\nexport function wcaEventInfo(event: string): EventInfo | null {\n  return wcaEvents[event] ?? null;\n}\n\nexport const twizzleEvents: Record<string, EventInfo> = {\n  ...wcaEvents,\n  fto: { puzzleID: \"fto\", eventName: \"Face-Turning Octahedron\" },\n  master_tetraminx: {\n    puzzleID: \"master_tetraminx\",\n    eventName: \"Master Tetraminx\",\n  },\n  kilominx: {\n    puzzleID: \"kilominx\",\n    eventName: \"Kilominx\",\n  },\n  redi_cube: {\n    puzzleID: \"redi_cube\",\n    eventName: \"Redi Cube\",\n  },\n};\n\n/** @category Event Info */\nexport function eventInfo(event: string): EventInfo | null {\n  return twizzleEvents[event] ?? null;\n}\n", "import { KPuzzle } from \"../../../kpuzzle\";\nimport type { ExperimentalStickering } from \"../../../twisty\";\nimport { asyncGetPuzzleGeometry } from \"../../async/async-pg3d\";\nimport { getCached } from \"../../async/lazy-cached\";\nimport type { PuzzleLoader } from \"../../PuzzleLoader\";\nimport type { StickeringMask } from \"../../stickerings/mask\";\nimport {\n  cubeLikeStickeringList,\n  cubeLikeStickeringMask,\n} from \"../../stickerings/cube-like-stickerings\";\n\n/** @category Specific Puzzles */\nexport const cube2x2x2: PuzzleLoader = {\n  id: \"2x2x2\",\n  fullName: \"2\u00D72\u00D72 Cube\",\n  kpuzzle: getCached(\n    async () =>\n      new KPuzzle(\n        (await import(\"../dynamic/side-events/puzzles-dynamic-side-events\"))\n          .cube2x2x2JSON,\n      ),\n  ),\n  svg: async () =>\n    (await import(\"../dynamic/side-events/puzzles-dynamic-side-events\"))\n      .cube2x2x2SVG,\n  llSVG: getCached(\n    async () =>\n      (await import(\"../dynamic/side-events/puzzles-dynamic-side-events\"))\n        .cube2x2x2LLSVG,\n  ),\n  pg: getCached(async () => {\n    return asyncGetPuzzleGeometry(\"2x2x2\");\n  }),\n  stickeringMask: (\n    stickering: ExperimentalStickering,\n  ): Promise<StickeringMask> => cubeLikeStickeringMask(cube2x2x2, stickering),\n  stickerings: () =>\n    cubeLikeStickeringList(\"2x2x2\", { use3x3x3Fallbacks: true }),\n};\n", "import type { PuzzleSpecificSimplifyOptions } from \"../../../alg\";\nimport { Move, QuantumMove } from \"../../../alg\";\n\nenum Axis {\n  X = \"x axis\",\n  Y = \"y axis\",\n  Z = \"z axis\",\n}\n\nenum MoveSourceType {\n  INDEXABLE_SLICE_NEAR,\n  INDEXABLE_SLICE_FAR,\n  INDEXABLE_WIDE_NEAR,\n  INDEXABLE_WIDE_FAR,\n  SPECIFIC_SLICE,\n  ROTATION,\n}\n\ninterface MoveSourceInfo {\n  family: string;\n  direction: -1 | 1;\n  type: MoveSourceType;\n  from: number;\n  to: number;\n}\n\nfunction makeSourceInfo(\n  moveStrings: string[],\n  type: MoveSourceType,\n  from: number,\n  to: number,\n): MoveSourceInfo[] {\n  const output: MoveSourceInfo[] = [];\n  for (const moveString of moveStrings) {\n    const move = Move.fromString(moveString);\n    const { family, amount: direction } = move;\n    if (![-1, 1].includes(direction)) {\n      // TODO: test iner/outer\n      // TODO: Can we move this to a test file?\n      throw new Error(\"Invalid config move\");\n    }\n    output.push({ family, direction: direction as -1 | 1, type, from, to });\n  }\n  return output;\n}\n\ninterface AxisInfo {\n  sliceDiameter: number;\n  extendsThroughEntirePuzzle: boolean;\n  moveSourceInfos: MoveSourceInfo[];\n}\n\n// TODO: wide slices\nconst axisInfos: Record<Axis, AxisInfo> = {\n  [Axis.X]: {\n    sliceDiameter: 3,\n    extendsThroughEntirePuzzle: true,\n    moveSourceInfos: [\n      ...makeSourceInfo([\"R\"], MoveSourceType.INDEXABLE_SLICE_NEAR, 0, 3),\n      ...makeSourceInfo([\"L'\"], MoveSourceType.INDEXABLE_SLICE_FAR, 0, 3),\n      ...makeSourceInfo([\"r\", \"Rw\"], MoveSourceType.INDEXABLE_WIDE_NEAR, 0, 2),\n      ...makeSourceInfo([\"l'\", \"Lw'\"], MoveSourceType.INDEXABLE_WIDE_FAR, 0, 2),\n      ...makeSourceInfo([\"M'\"], MoveSourceType.SPECIFIC_SLICE, 1, 2), // TODO: remove some indices?\n      ...makeSourceInfo([\"x\", \"Uv\", \"Dv'\"], MoveSourceType.ROTATION, 0, 3), // TODO: remove some indices?\n    ],\n  },\n  [Axis.Y]: {\n    sliceDiameter: 3,\n    extendsThroughEntirePuzzle: true,\n    moveSourceInfos: [\n      ...makeSourceInfo([\"U\"], MoveSourceType.INDEXABLE_SLICE_NEAR, 0, 3),\n      ...makeSourceInfo([\"D'\"], MoveSourceType.INDEXABLE_SLICE_FAR, 0, 3),\n      ...makeSourceInfo([\"u\", \"Uw\"], MoveSourceType.INDEXABLE_WIDE_NEAR, 0, 2),\n      ...makeSourceInfo([\"d'\", \"Dw'\"], MoveSourceType.INDEXABLE_WIDE_FAR, 0, 2),\n      ...makeSourceInfo([\"E'\"], MoveSourceType.SPECIFIC_SLICE, 1, 2), // TODO: remove some indices?\n      ...makeSourceInfo([\"y\", \"Uv\", \"Dv'\"], MoveSourceType.ROTATION, 0, 3), // TODO: remove some indices?\n    ],\n  },\n  [Axis.Z]: {\n    sliceDiameter: 3,\n    extendsThroughEntirePuzzle: true,\n    moveSourceInfos: [\n      ...makeSourceInfo([\"F\"], MoveSourceType.INDEXABLE_SLICE_NEAR, 0, 3),\n      ...makeSourceInfo([\"B'\"], MoveSourceType.INDEXABLE_SLICE_FAR, 0, 3),\n      ...makeSourceInfo([\"f\", \"Fw\"], MoveSourceType.INDEXABLE_WIDE_NEAR, 0, 3),\n      ...makeSourceInfo([\"b'\", \"Bw'\"], MoveSourceType.INDEXABLE_WIDE_FAR, 0, 3),\n      ...makeSourceInfo([\"S\"], MoveSourceType.SPECIFIC_SLICE, 1, 2), // TODO: remove some indices?\n      ...makeSourceInfo([\"z\", \"Fv\", \"Bv'\"], MoveSourceType.ROTATION, 0, 3), // TODO: remove some indices?\n    ],\n  },\n};\n\nconst byFamily: Record<string, { axis: Axis; moveSourceInfo: MoveSourceInfo }> =\n  {};\nfor (const [axis, info] of Object.entries(axisInfos)) {\n  for (const moveSourceInfo of info.moveSourceInfos) {\n    byFamily[moveSourceInfo.family] = { axis: axis as Axis, moveSourceInfo };\n  }\n}\n\n// TODO: lazy initialization?\nconst byAxisThenType: Record<\n  Axis,\n  Partial<Record<MoveSourceType, MoveSourceInfo[]>>\n> = {} as any; // TODO: avoid typecast (using `Object.fromEntries`?)\nfor (const axis of Object.keys(axisInfos) as Axis[]) {\n  const entry: Partial<Record<MoveSourceType, MoveSourceInfo[]>> = {};\n  byAxisThenType[axis] = entry;\n  for (const moveSourceInfo of axisInfos[axis].moveSourceInfos) {\n    (entry[moveSourceInfo.type] ??= []).push(moveSourceInfo);\n  }\n}\n\n// TODO: consolidate lookup tables?\nconst byAxisThenSpecificSlices: Record<\n  Axis,\n  Map<number, MoveSourceInfo>\n> = {} as any; // TODO: avoid typecast (using `Object.fromEntries`?)\nfor (const axis of Object.keys(axisInfos) as Axis[]) {\n  const entry: Map<number, MoveSourceInfo> = new Map();\n  byAxisThenSpecificSlices[axis] = entry;\n  for (const moveSourceInfo of axisInfos[axis].moveSourceInfos) {\n    // We only want to use the first entry per slice index (in the unlikely case there are multiple).\n    if (!entry.get(moveSourceInfo.from)) {\n      entry.set(moveSourceInfo.from, moveSourceInfo);\n    }\n  }\n}\n\nfunction firstOfType(\n  axis: Axis,\n  moveSourceType: MoveSourceType,\n): MoveSourceInfo {\n  const entry = byAxisThenType[axis][moveSourceType]?.[0];\n  if (!entry) {\n    throw new Error(\n      `Could not find a reference move (axis: ${axis}, move source type: ${moveSourceType})`,\n    );\n  }\n  return entry;\n}\n\nconst areQuantumMovesSameAxis = (\n  quantumMove1: QuantumMove,\n  quantumMove2: QuantumMove,\n) => {\n  return (\n    byFamily[quantumMove1.family].axis === byFamily[quantumMove2.family].axis\n  );\n};\n\nfunction simplestMove(\n  axis: Axis,\n  from: number,\n  to: number,\n  directedAmount: number,\n): Move {\n  if (from + 1 === to) {\n    const sliceSpecificInfo = byAxisThenSpecificSlices[axis].get(from);\n    if (sliceSpecificInfo) {\n      return new Move(\n        new QuantumMove(sliceSpecificInfo.family),\n        directedAmount * sliceSpecificInfo.direction,\n      );\n    }\n  }\n\n  const axisInfo = axisInfos[axis];\n  const { sliceDiameter } = axisInfo;\n  if (from === 0 && to === sliceDiameter) {\n    const moveSourceInfo = firstOfType(axis, MoveSourceType.ROTATION);\n    return new Move(\n      new QuantumMove(moveSourceInfo.family),\n      directedAmount * moveSourceInfo.direction,\n    );\n  }\n\n  // const specificSliceInfo = byAxisThenSpecificSlices[axis].get(from);\n  const far = from + to > sliceDiameter; // (from + to) / 2 > sliceDiameter / 2\n  if (far) {\n    [from, to] = [sliceDiameter - to, sliceDiameter - from];\n  }\n\n  let outerLayer: number | null = from + 1; // change to 1-indexed\n  let innerLayer: number | null = to; // already 1-indexed\n  const slice = outerLayer === innerLayer;\n  if (slice) {\n    innerLayer = null;\n  }\n\n  if (outerLayer === 1) {\n    outerLayer = null;\n  }\n  if (slice && outerLayer === 1) {\n    innerLayer = null;\n  }\n  if (!slice && innerLayer === 2) {\n    innerLayer = null;\n  }\n\n  const moveSourceType = slice\n    ? far\n      ? MoveSourceType.INDEXABLE_SLICE_FAR\n      : MoveSourceType.INDEXABLE_SLICE_NEAR\n    : far\n    ? MoveSourceType.INDEXABLE_WIDE_FAR\n    : MoveSourceType.INDEXABLE_WIDE_NEAR;\n  const moveSourceInfo = firstOfType(axis, moveSourceType);\n  return new Move(\n    new QuantumMove(moveSourceInfo.family, innerLayer, outerLayer),\n    directedAmount * moveSourceInfo.direction,\n  );\n}\n\nfunction simplifySameAxisMoves(\n  moves: Move[],\n  quantumMod: boolean = true, // TODO\n): Move[] {\n  if (moves.length === 0) {\n    // TODO: can we use the type system to avoid this?\n    return [];\n  }\n\n  const axis: Axis = byFamily[moves[0].family].axis;\n  const axisInfo = axisInfos[axis];\n  const { sliceDiameter } = axisInfo;\n  const sliceDeltas = new Map<number, number>();\n  let lastCandidateRange: {\n    suffixLength: number;\n    sliceDeltas: Map<number, number>;\n  } | null = null;\n\n  function adjustValue(idx: number, relativeDelta: number) {\n    let newDelta = (sliceDeltas.get(idx) ?? 0) + relativeDelta;\n    if (quantumMod) {\n      newDelta = (newDelta % 4) + (5 % 4) - 1; // TODO: Use a passed-in `modMove`?\n    }\n    if (newDelta === 0) {\n      sliceDeltas.delete(idx);\n    } else {\n      sliceDeltas.set(idx, newDelta);\n    }\n  }\n  // TODO: go as far as possible instead of trying to take all moves, e.g. simplify U y y' to U.\n  let suffixLength = 0;\n  // TODO: Reverse iterator?\n  for (const move of Array.from(moves).reverse()) {\n    suffixLength++;\n    const { moveSourceInfo } = byFamily[move.family];\n    const directedAmount = move.amount * moveSourceInfo.direction;\n    // console.log({ directedAmount });\n    switch (moveSourceInfo.type) {\n      case MoveSourceType.INDEXABLE_SLICE_NEAR: {\n        // We convert to zero-indexing\n        const idx = (move.innerLayer ?? 1) - 1;\n        adjustValue(idx, directedAmount);\n        adjustValue(idx + 1, -directedAmount);\n        break;\n      }\n      case MoveSourceType.INDEXABLE_SLICE_FAR: {\n        // We convert to zero-indexing (which cancels with the subtraction from the slice width)\n        const idx = sliceDiameter - (move.innerLayer ?? 1);\n        adjustValue(idx, directedAmount);\n        adjustValue(idx + 1, -directedAmount);\n        break;\n      }\n      case MoveSourceType.INDEXABLE_WIDE_NEAR: {\n        adjustValue((move.outerLayer ?? 1) - 1, directedAmount);\n        adjustValue(move.innerLayer ?? 2, -directedAmount);\n        break;\n      }\n      case MoveSourceType.INDEXABLE_WIDE_FAR: {\n        adjustValue(sliceDiameter - (move.innerLayer ?? 2), directedAmount);\n        adjustValue(\n          sliceDiameter - ((move.outerLayer ?? 1) - 1),\n          -directedAmount,\n        );\n        break;\n      }\n      case MoveSourceType.SPECIFIC_SLICE: {\n        // We convert to zero-indexing (which cancels with the subtraction from the slice width)\n        adjustValue(moveSourceInfo.from, directedAmount);\n        adjustValue(moveSourceInfo.to, -directedAmount);\n        break;\n      }\n      case MoveSourceType.ROTATION: {\n        adjustValue(0, directedAmount);\n        adjustValue(sliceDiameter, -directedAmount);\n        break;\n      }\n    }\n    if ([0, 2].includes(sliceDeltas.size)) {\n      lastCandidateRange = { suffixLength, sliceDeltas: new Map(sliceDeltas) };\n    }\n  }\n  if (sliceDeltas.size === 0) {\n    return [];\n  }\n  // TODO: handle this check in the destructuring assignment?\n  if (!lastCandidateRange) {\n    return moves;\n  }\n  let [from, to] = lastCandidateRange.sliceDeltas.keys();\n  if (from > to) {\n    [from, to] = [to, from];\n  }\n  const directedAmount = lastCandidateRange.sliceDeltas.get(from)!;\n  // TODO: Handle empty move\n  return [\n    ...moves.slice(0, -lastCandidateRange.suffixLength),\n    ...(directedAmount !== 0\n      ? [simplestMove(axis, from, to, directedAmount)]\n      : []),\n  ];\n}\n\nexport const puzzleSpecificSimplifyOptions333: PuzzleSpecificSimplifyOptions = {\n  quantumMoveOrder: () => 4,\n  // doQuantumMovesCommute: areQuantumMovesSameAxis,\n  axis: { areQuantumMovesSameAxis, simplifySameAxisMoves },\n};\n", "// Include 3x3x3 in the main bundle for better performance.\nimport type { ExperimentalStickering } from \"../../../twisty\";\nimport { asyncGetPuzzleGeometry } from \"../../async/async-pg3d\";\nimport { getCached } from \"../../async/lazy-cached\";\nimport { experimental3x3x3KPuzzle } from \"../../cubing-private\";\nimport type { PuzzleLoader } from \"../../PuzzleLoader\";\nimport type { StickeringMask } from \"../../stickerings/mask\";\nimport {\n  cubeLikeStickeringMask,\n  cubeLikeStickeringList,\n} from \"../../stickerings/cube-like-stickerings\";\nimport { puzzleSpecificSimplifyOptions333 } from \"./puzzle-specific-simplifications\";\n\n/** @category Specific Puzzles */\nexport const cube3x3x3: PuzzleLoader = {\n  id: \"3x3x3\",\n  fullName: \"3\u00D73\u00D73 Cube\",\n  inventedBy: [\"Ern\u0151 Rubik\"],\n  inventionYear: 1974, // https://en.wikipedia.org/wiki/Rubik%27s_Cube#Conception_and_development\n  kpuzzle: getCached(async () => {\n    return experimental3x3x3KPuzzle;\n  }),\n  svg: getCached(async () => {\n    return (\n      await import(\"../dynamic/3x3x3/puzzles-dynamic-3x3x3\")\n    ).cube3x3x3SVG;\n  }),\n  llSVG: getCached(async () => {\n    return (\n      await import(\"../dynamic/3x3x3/puzzles-dynamic-3x3x3\")\n    ).cube3x3x3LLSVG;\n  }),\n  pg: getCached(async () => {\n    return asyncGetPuzzleGeometry(\"3x3x3\");\n  }),\n  stickeringMask: (\n    stickering: ExperimentalStickering,\n  ): Promise<StickeringMask> => cubeLikeStickeringMask(cube3x3x3, stickering),\n  stickerings: () => cubeLikeStickeringList(\"3x3x3\"),\n  puzzleSpecificSimplifyOptions: puzzleSpecificSimplifyOptions333,\n};\n", "import { KPuzzle } from \"../../../kpuzzle\";\nimport { getCached } from \"../../async/lazy-cached\";\nimport type { PuzzleLoader } from \"../../PuzzleLoader\";\n\nexport const clock: PuzzleLoader = {\n  id: \"clock\",\n  fullName: \"Clock\",\n  inventedBy: [\"Christopher C. Wiggs\", \"Christopher J. Taylor\"],\n  inventionYear: 1988, // Patent application year: https://www.jaapsch.net/puzzles/patents/us4869506.pdf\n  kpuzzle: getCached(\n    async () =>\n      new KPuzzle(\n        (await import(\"../dynamic/side-events/puzzles-dynamic-side-events\"))\n          .clockJSON,\n      ),\n  ),\n  svg: getCached(async () => {\n    return (\n      await import(\"../dynamic/side-events/puzzles-dynamic-side-events\")\n    ).clockSVG;\n  }),\n};\n", "import type { ExperimentalStickering } from \"../../twisty\";\nimport type { PuzzleLoader } from \"../PuzzleLoader\";\nimport {\n  StickeringMask,\n  PuzzleStickering,\n  StickeringManager,\n  PieceSet,\n  PieceStickering,\n} from \"./mask\";\n\nexport async function ftoStickering(\n  puzzleLoader: PuzzleLoader,\n  stickering: ExperimentalStickering,\n): Promise<StickeringMask> {\n  const kpuzzle = await puzzleLoader.kpuzzle();\n  const puzzleStickering = new PuzzleStickering(kpuzzle);\n  const m = new StickeringManager(kpuzzle);\n\n  const experimentalFTO_FC = (): PieceSet =>\n    m.and([m.move(\"U\"), m.not(m.or(m.moves([\"F\", \"BL\", \"BR\"])))]);\n  const experimentalFTO_F2T = (): PieceSet =>\n    m.and([m.move(\"U\"), m.not(m.move(\"F\"))]);\n  const experimentalFTO_SC = (): PieceSet =>\n    m.or([\n      experimentalFTO_F2T(),\n      m.and([m.move(\"F\"), m.not(m.or(m.moves([\"U\", \"BL\", \"BR\"])))]),\n    ]);\n  const experimentalFTO_L2C = (): PieceSet =>\n    m.not(\n      m.or([\n        m.and([m.move(\"U\"), m.move(\"F\")]),\n        m.and([m.move(\"F\"), m.move(\"BL\")]),\n        m.and([m.move(\"F\"), m.move(\"BR\")]),\n        m.and([m.move(\"BL\"), m.move(\"BR\")]),\n      ]),\n    );\n  const experimentalFTO_LBT = (): PieceSet =>\n    m.not(\n      m.or([\n        m.and([m.move(\"F\"), m.move(\"BL\")]),\n        m.and([m.move(\"F\"), m.move(\"BR\")]),\n        m.and([m.move(\"BL\"), m.move(\"BR\")]),\n      ]),\n    );\n\n  switch (stickering) {\n    case \"full\":\n      break;\n    case \"experimental-fto-fc\": {\n      puzzleStickering.set(\n        m.not(experimentalFTO_FC()),\n        PieceStickering.Ignored,\n      );\n      break;\n    }\n    case \"experimental-fto-f2t\": {\n      puzzleStickering.set(\n        m.not(experimentalFTO_F2T()),\n        PieceStickering.Ignored,\n      );\n      puzzleStickering.set(experimentalFTO_FC(), PieceStickering.Dim);\n      break;\n    }\n    case \"experimental-fto-sc\": {\n      puzzleStickering.set(\n        m.not(experimentalFTO_SC()),\n        PieceStickering.Ignored,\n      );\n      puzzleStickering.set(experimentalFTO_F2T(), PieceStickering.Dim);\n      break;\n    }\n    case \"experimental-fto-l2c\": {\n      puzzleStickering.set(\n        m.not(experimentalFTO_L2C()),\n        PieceStickering.Ignored,\n      );\n      puzzleStickering.set(experimentalFTO_SC(), PieceStickering.Dim);\n      break;\n    }\n    case \"experimental-fto-lbt\": {\n      puzzleStickering.set(\n        m.not(experimentalFTO_LBT()),\n        PieceStickering.Ignored,\n      );\n      puzzleStickering.set(experimentalFTO_L2C(), PieceStickering.Dim);\n      break;\n    }\n    case \"experimental-fto-l3t\": {\n      puzzleStickering.set(experimentalFTO_LBT(), PieceStickering.Dim);\n      break;\n    }\n    default:\n      console.warn(\n        `Unsupported stickering for ${puzzleLoader.id}: ${stickering}. Setting all pieces to dim.`,\n      );\n      puzzleStickering.set(m.and(m.moves([])), PieceStickering.Dim);\n  }\n  return puzzleStickering.toStickeringMask();\n}\n\nexport async function ftoStickerings(): Promise<ExperimentalStickering[]> {\n  return [\n    \"full\",\n    \"experimental-fto-fc\",\n    \"experimental-fto-f2t\",\n    \"experimental-fto-sc\",\n    \"experimental-fto-l2c\",\n    \"experimental-fto-lbt\",\n    \"experimental-fto-l3t\",\n  ];\n}\n", "import type { ExperimentalStickering } from \"../../../twisty\";\nimport { PGPuzzleLoader } from \"../../async/async-pg3d\";\nimport { getCached } from \"../../async/lazy-cached\";\nimport type { StickeringMask } from \"../../stickerings/mask\";\nimport {\n  ftoStickering,\n  ftoStickerings,\n} from \"../../stickerings/fto-stickerings\";\n\nclass FTOPuzzleLoader extends PGPuzzleLoader {\n  constructor() {\n    super({\n      pgID: \"FTO\",\n      id: \"fto\",\n      fullName: \"Face-Turning Octahedron\",\n      inventedBy: [\"Karl Rohrbach\", \"David Pitcher\"], // http://twistypuzzles.com/cgi-bin/puzzle.cgi?pkey=1663\n      inventionYear: 1983, // http://twistypuzzles.com/cgi-bin/puzzle.cgi?pkey=1663\n    });\n  }\n  stickeringMask(stickering: ExperimentalStickering): Promise<StickeringMask> {\n    return ftoStickering(this, stickering);\n  }\n  stickerings = ftoStickerings;\n  override svg = getCached(async () => {\n    return (\n      await import(\"../dynamic/unofficial/puzzles-dynamic-unofficial\")\n    ).ftoSVG;\n  });\n}\n\nexport const fto = new FTOPuzzleLoader();\n", "import type { ExperimentalStickering } from \"../../twisty\";\nimport type { PuzzleLoader } from \"../PuzzleLoader\";\nimport type { StickeringMask } from \"./mask\";\nimport {\n  cubeLikeStickeringList,\n  cubeLikeStickeringMask,\n} from \"./cube-like-stickerings\";\nimport { from } from \"../../vendor/mit/p-lazy/p-lazy\";\n\n// TODO: cache calculations?\nexport async function megaminxStickeringMask(\n  puzzleLoader: PuzzleLoader,\n  stickering: ExperimentalStickering,\n): Promise<StickeringMask> {\n  // TODO: optimize lookup instead of looking through a list\n  if ((await megaminxStickerings()).includes(stickering)) {\n    return cubeLikeStickeringMask(puzzleLoader, stickering);\n  }\n  console.warn(\n    `Unsupported stickering for ${puzzleLoader.id}: ${stickering}. Setting all pieces to dim.`,\n  );\n  return cubeLikeStickeringMask(puzzleLoader, \"full\");\n}\n\nconst megaminxStickeringListPromise: Promise<string[]> = from(() =>\n  cubeLikeStickeringList(\"megaminx\"),\n);\nexport function megaminxStickerings(): Promise<string[]> {\n  return megaminxStickeringListPromise;\n}\n", "import type { ExperimentalStickering } from \"../../../twisty\";\nimport { PGPuzzleLoader } from \"../../async/async-pg3d\";\nimport { getCached } from \"../../async/lazy-cached\";\nimport type { StickeringMask } from \"../../stickerings/mask\";\nimport {\n  megaminxStickeringMask,\n  megaminxStickerings,\n} from \"../../stickerings/megaminx-stickerings\";\n\nclass MegaminxPuzzleLoader extends PGPuzzleLoader {\n  constructor() {\n    super({\n      id: \"megaminx\",\n      fullName: \"Megaminx\",\n      // Too many simultaneous inventors to name.\n      inventionYear: 1981, // Earliest date from https://www.jaapsch.net/puzzles/megaminx.htm\n    });\n  }\n  stickeringMask(stickering: ExperimentalStickering): Promise<StickeringMask> {\n    return megaminxStickeringMask(this, stickering);\n  }\n  stickerings = megaminxStickerings;\n\n  llSVG = getCached(async () => {\n    return (\n      await import(\"../dynamic/megaminx/puzzles-dynamic-megaminx\")\n    ).megaminxLLSVG;\n  });\n}\n\nexport const megaminx = new MegaminxPuzzleLoader();\n", "import { PGPuzzleLoader } from \"../../async/async-pg3d\";\nimport { getCached } from \"../../async/lazy-cached\";\n\nclass PyraminxPuzzleLoader extends PGPuzzleLoader {\n  constructor() {\n    super({\n      id: \"pyraminx\",\n      fullName: \"Pyraminx\",\n      inventedBy: [\"Uwe Meffert\"],\n    });\n  }\n  override svg = getCached(async () => {\n    return (\n      await import(\"../dynamic/side-events/puzzles-dynamic-side-events\")\n    ).pyraminxSVG;\n  });\n}\n\nexport const pyraminx = new PyraminxPuzzleLoader();\n", "import { KPuzzle } from \"../../../kpuzzle\";\nimport { getCached } from \"../../async/lazy-cached\";\nimport type { PuzzleLoader } from \"../../PuzzleLoader\";\n\nexport const square1: PuzzleLoader = {\n  id: \"square1\",\n  fullName: \"Square-1\",\n  inventedBy: [\"Karel Hr\u0161el\", \"Vojtech Kopsk\u00FD\"],\n  inventionYear: 1990, // Czech patent application year: http://spisy.upv.cz/Patents/FullDocuments/277/277266.pdf\n  kpuzzle: getCached(\n    async () =>\n      new KPuzzle(\n        (await import(\"../dynamic/side-events/puzzles-dynamic-side-events\"))\n          .sq1HyperOrbitJSON,\n      ),\n  ),\n  svg: getCached(async () => {\n    return (\n      await import(\"../dynamic/side-events/puzzles-dynamic-side-events\")\n    ).sq1HyperOrbitSVG;\n  }),\n};\n", "import type { PuzzleLoader } from \"../..\";\nimport type { Move } from \"../../../alg\";\nimport { KPuzzle, KTransformationData } from \"../../../kpuzzle\";\nimport type { ExperimentalPGNotation } from \"../../../puzzle-geometry\";\nimport { asyncGetPuzzleGeometry } from \"../../async/async-pg3d\";\nimport { getCached } from \"../../async/lazy-cached\";\n\n// TODO: Make this consistent with Megaminx corners\nexport const kilominx: PuzzleLoader = {\n  id: \"kilominx\",\n  fullName: \"Kilominx\",\n  kpuzzle: getCached(async () => {\n    const pg = await asyncGetPuzzleGeometry(\"megaminx + chopasaurus\");\n    const kpuzzleDefinition = JSON.parse(\n      JSON.stringify(pg.getKPuzzleDefinition(true)),\n    );\n    delete kpuzzleDefinition.orbits.CENTERS;\n    delete kpuzzleDefinition.orbits.CENTERS2;\n    delete kpuzzleDefinition.startStateData.CENTERS;\n    delete kpuzzleDefinition.startStateData.CENTERS2;\n    for (const moveDefinition of Object.values(kpuzzleDefinition.moves)) {\n      delete (moveDefinition as any).CENTERS;\n      delete (moveDefinition as any).CENTERS2;\n    }\n    kpuzzleDefinition.name = \"kilominx\";\n    delete kpuzzleDefinition.experimentalPuzzleDescription;\n    const puzzleGeometry = await import(\"../../../puzzle-geometry\");\n    const pgNotation = new puzzleGeometry.ExperimentalPGNotation(\n      pg,\n      pg.getOrbitsDef(true),\n    );\n    const kpuzzle = new KPuzzle(kpuzzleDefinition, {\n      experimentalPGNotation: {\n        lookupMove: (move: Move): KTransformationData | null => {\n          if (move.toString() === \"x2\" || move.toString() === \"x2'\") {\n            return x2Transformation.transformationData;\n          }\n          return pgNotation.lookupMove(move);\n        },\n      } as ExperimentalPGNotation,\n    });\n    const x2Transformation = kpuzzle.algToTransformation(\"Rv2 Fv Uv'\");\n    kpuzzleDefinition.moves[\"x2\"] = x2Transformation;\n    return kpuzzle;\n  }),\n  svg: getCached(async () => {\n    return (\n      await import(\"../dynamic/unofficial/puzzles-dynamic-unofficial\")\n    ).kilominxSVG;\n  }),\n};\n", "import { KPuzzle } from \"../../../kpuzzle\";\nimport { getCached } from \"../../async/lazy-cached\";\nimport type { PuzzleLoader } from \"../../PuzzleLoader\";\n\nexport const rediCube: PuzzleLoader = {\n  id: \"redi_cube\",\n  fullName: \"Redi Cube\",\n  // Announced 2009-07-21: https://www.youtube.com/watch?v=cjfMzA1u3vM\n  // https://twistypuzzles.com/cgi-bin/puzzle.cgi?pkey=1520\n  inventedBy: [\"Oskar van Deventer\"],\n  inventionYear: 2009,\n  kpuzzle: getCached(\n    async () =>\n      new KPuzzle(\n        (await import(\"../dynamic/unofficial/puzzles-dynamic-unofficial\"))\n          .rediCubeJSON,\n      ),\n  ),\n  svg: async () => {\n    return (await import(\"../dynamic/unofficial/puzzles-dynamic-unofficial\"))\n      .rediCubeSVG;\n  },\n};\n", "import { CubePGPuzzleLoader } from \"../../async/async-pg3d\";\nimport { getCached } from \"../../async/lazy-cached\";\nimport type { PuzzleLoader } from \"../../PuzzleLoader\";\n\nconst cube4x4x4: PuzzleLoader = new CubePGPuzzleLoader({\n  id: \"4x4x4\",\n  fullName: \"4\u00D74\u00D74 Cube\",\n});\n\ncube4x4x4.llSVG = getCached(async () => {\n  return (\n    await import(\"../dynamic/4x4x4/puzzles-dynamic-4x4x4\")\n  ).cube4x4x4LLSVG;\n});\n\nexport { cube4x4x4 };\n", "import { KPuzzle } from \"../../../kpuzzle\";\nimport { getCached } from \"../../async/lazy-cached\";\nimport type { PuzzleLoader } from \"../../PuzzleLoader\";\n\nexport const melindas2x2x2x2: PuzzleLoader = {\n  id: \"melindas2x2x2x2\",\n  fullName: \"Melinda's 2\u00D72\u00D72\u00D72\",\n  inventedBy: [\"Melinda Green\"],\n  // inventionYear: 20__, // TODO\n  kpuzzle: getCached(\n    async () =>\n      new KPuzzle(\n        (await import(\"../dynamic/side-events/puzzles-dynamic-side-events\"))\n          .melindas2x2x2x2OrbitJSON,\n      ),\n  ),\n  svg: getCached(async () => {\n    return (\n      await import(\"../dynamic/side-events/puzzles-dynamic-side-events\")\n    ).melindas2x2x2x2OrbitSVG;\n  }),\n};\n", "export { eventInfo, wcaEventInfo, wcaEvents, twizzleEvents } from \"./events\";\nexport type { PuzzleLoader };\nexport { cube2x2x2, cube3x3x3 };\n\nimport { CubePGPuzzleLoader, PGPuzzleLoader } from \"./async/async-pg3d\";\nimport { cube2x2x2 } from \"./implementations/2x2x2\";\nimport { cube3x3x3 } from \"./implementations/3x3x3\";\nimport { clock } from \"./implementations/clock\";\nimport { fto } from \"./implementations/fto\";\nimport { megaminx } from \"./implementations/megaminx\";\nimport { pyraminx } from \"./implementations/pyraminx\";\nimport { square1 } from \"./implementations/square1\";\nimport { kilominx } from \"./implementations/kilominx\";\nimport type { PuzzleLoader } from \"./PuzzleLoader\";\nimport { rediCube } from \"./implementations/redi-cube\";\nimport { cube4x4x4 } from \"./implementations/4x4x4\";\nimport { melindas2x2x2x2 } from \"./implementations/melindas2x2x2x2\";\n\n/** @category All Puzzles */\nexport const puzzles: Record<string, PuzzleLoader> = {\n  /******** Start of WCA Puzzles *******/\n  \"3x3x3\": cube3x3x3,\n  \"2x2x2\": cube2x2x2,\n  \"4x4x4\": cube4x4x4,\n  \"5x5x5\": new CubePGPuzzleLoader({ id: \"5x5x5\", fullName: \"5\u00D75\u00D75 Cube\" }),\n  \"6x6x6\": new CubePGPuzzleLoader({ id: \"6x6x6\", fullName: \"6\u00D76\u00D76 Cube\" }),\n  \"7x7x7\": new CubePGPuzzleLoader({ id: \"7x7x7\", fullName: \"7\u00D77\u00D77 Cube\" }),\n  \"40x40x40\": new CubePGPuzzleLoader({\n    id: \"40x40x40\",\n    fullName: \"40\u00D740\u00D740 Cube\",\n  }),\n  // 3x3x3 Blindfolded\n  // 3x3x3 Fewest Moves\n  // 3x3x3 One-Handed\n  clock,\n  megaminx: megaminx,\n  pyraminx,\n  skewb: new PGPuzzleLoader({\n    id: \"skewb\",\n    fullName: \"Skewb\",\n    inventedBy: [\"Tony Durham\"], // https://www.jaapsch.net/puzzles/skewb.htm\n    // inventionYear: 1982, // 1982 is actually the year of Hofstadter's column.\n  }),\n  square1,\n  // 4x4x4 Blindfolded\n  // 5x5x5 Blindfolded\n  /******** End of WCA puzzles ********/\n  fto: fto,\n  gigaminx: new PGPuzzleLoader({\n    id: \"gigaminx\",\n    fullName: \"Gigaminx\",\n    inventedBy: [\"Tyler Fox\"],\n    inventionYear: 2006, // Earliest date from https://www.twistypuzzles.com/cgi-bin/puzzle.cgi?pkey=1475\n  }),\n  master_tetraminx: new PGPuzzleLoader({\n    pgID: \"master tetraminx\",\n    id: \"master_tetraminx\",\n    fullName: \"Master Tetraminx\",\n    inventedBy: [\"Katsuhiko Okamoto\"], // Using master pyraminx: https://twistypuzzles.com/cgi-bin/puzzle.cgi?pkey=1352\n    inventionYear: 2002, // Using master pyraminx: https://twistypuzzles.com/cgi-bin/puzzle.cgi?pkey=1352\n  }),\n  kilominx,\n  redi_cube: rediCube,\n  melindas2x2x2x2,\n};\n", "export const twistyDebugGlobals: {\n  // WARNING: The current shared renderer implementation has performance issues, especially in Safari.\n  // Avoid using for players that are likely to have dimensions approaching 1 megapixel or higher.\n  // TODO: use a dedicated renderer while fullscreen?\n  // - \"auto\": Default heuristics.\n  // - \"always\": Force all new (i.e. constructed in the future) renderers to be shared\n  // - \"never\": Force all new (i.e. constructed in the future) renderers to be dedicated\n  shareAllNewRenderers: \"auto\" | \"always\" | \"never\";\n  showRenderStats: boolean;\n} = {\n  shareAllNewRenderers: \"auto\",\n  showRenderStats: false,\n};\n\nexport function setTwistyDebug(\n  options: Partial<typeof twistyDebugGlobals>,\n): void {\n  for (const [key, value] of Object.entries(options)) {\n    if (key in twistyDebugGlobals) {\n      (twistyDebugGlobals as any)[key] = value;\n    }\n  }\n}\n", "// TODO: Pick a much better name.\nexport class PromiseFreshener<T> {\n  #latestAssignedIdx = 0;\n  #latestResolvedIdx = 0;\n\n  // TODO: reject instead? Drop?\n  async queue(\n    p: Promise<T>,\n  ): Promise<{ fresh: false } | { fresh: true; result: T }> {\n    const idx = ++this.#latestAssignedIdx;\n    const result = await p;\n    if (idx > this.#latestResolvedIdx) {\n      this.#latestResolvedIdx = idx;\n      return {\n        fresh: true,\n        result: result,\n      };\n    } else {\n      return { fresh: false };\n    }\n  }\n}\n\n// This will silenty drop a queued Promise (i.e. not resolve it) if a\n// newer queued one already resolved first. This is useful for classes that want\n// to know the \"latest\" state of something without jumping back to an older\n// value by accident.\n// TODO: Remove this because it's too easy to misuse?\nexport class StaleDropper<T> {\n  #latestAssignedIdx = 0;\n  #latestResolvedIdx = 0;\n\n  queue(p: Promise<T>): Promise<T> {\n    // rome-ignore lint/suspicious/noAsyncPromiseExecutor: This is a very rare case where we *do* want to drop a Promise sometimes.\n    return new Promise(async (resolve, reject) => {\n      try {\n        const idx = ++this.#latestAssignedIdx;\n        const result = await p;\n        if (idx > this.#latestResolvedIdx) {\n          this.#latestResolvedIdx = idx;\n          resolve(result);\n        }\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n}\n", "import { from } from \"../../../vendor/mit/p-lazy/p-lazy\";\nimport { StaleDropper } from \"../PromiseFreshener\";\nimport type { UserVisibleErrorTracker } from \"../UserVisibleErrorTracker\";\n\n// rome-ignore lint/nursery/noBannedTypes: TODO: can we use `satisfies` below instead of using this?\ntype InputRecord = {};\n\nexport type InputProps<T extends InputRecord> = {\n  [s in keyof T]: TwistyPropParent<T[s]>;\n};\n\ntype InputPromises<T extends InputRecord> = {\n  [s in keyof T]: Promise<T[s]>;\n};\n\ninterface SourceEventDetail<OutputType> {\n  sourceProp: TwistyPropSource<OutputType, any>;\n  value: Promise<OutputType>; // TODO: remove?\n  generation: number;\n}\n\ntype SourceEvent<T> = CustomEvent<SourceEventDetail<T>>;\n\ntype PromiseOrValue<T> = T | Promise<T>;\n\n// Values of T must be immutable.\nlet globalSourceGeneration = 0; // This is incremented before being used, so 1 will be the first active value.\nexport abstract class TwistyPropParent<T> {\n  public abstract get(): Promise<T>;\n\n  // Don't overwrite this. Overwrite `canReuseValue` instead.\n  public canReuse(v1: T, v2: T): boolean {\n    return v1 === v2 || this.canReuseValue(v1, v2);\n  }\n\n  // Overwrite with a cheap semantic comparison when possible.\n  // Note that this is not called if `v1 === v2` (in which case the value is automatically reused).\n  protected canReuseValue(_v1: T, _v2: T): boolean {\n    return false;\n  }\n\n  debugGetChildren(): TwistyPropDerived<any, any>[] {\n    return Array.from(this.#children.values());\n  }\n\n  // Propagation\n\n  #children: Set<TwistyPropDerived<any, any>> = new Set();\n  protected addChild(child: TwistyPropDerived<any, any>): void {\n    this.#children.add(child);\n  }\n\n  protected removeChild(child: TwistyPropDerived<any, any>): void {\n    this.#children.delete(child);\n  }\n\n  protected lastSourceGeneration: number = 0;\n  // Synchronously marks all descendants as stale. This doesn't actually\n  // literally mark as stale, but it updates the last source generation, which\n  // is used to tell if a cahced result is stale.\n  protected markStale(sourceEvent: SourceEvent<any>): void {\n    if (sourceEvent.detail.generation !== globalSourceGeneration) {\n      // The full stale propagation is synchronous, so there should not be a new one yet.\n      throw new Error(\"A TwistyProp was marked stale too late!\");\n    }\n    if (this.lastSourceGeneration === sourceEvent.detail.generation) {\n      // Already propagated.\n      return;\n    }\n    this.lastSourceGeneration = sourceEvent.detail.generation;\n    for (const child of this.#children) {\n      child.markStale(sourceEvent);\n    }\n    // We schedule sending out events *after* the (synchronous) propagation has happened, in\n    // case one of the listeners updates a source again.\n    this.#scheduleRawDispatch();\n  }\n\n  #rawListeners: Set<() => void> = new Set();\n  /** @deprecated */\n  addRawListener(listener: () => void, options?: { initial: boolean }): void {\n    this.#rawListeners.add(listener);\n    if (options?.initial) {\n      listener(); // TODO: wrap in a try?\n    }\n  }\n\n  /** @deprecated */\n  removeRawListener(listener: () => void): void {\n    this.#rawListeners.delete(listener);\n  }\n\n  /** @deprecated */\n  #scheduleRawDispatch(): void {\n    if (!this.#rawDispatchPending) {\n      this.#rawDispatchPending = true;\n      setTimeout(() => this.#dispatchRawListeners(), 0);\n    }\n  }\n\n  #rawDispatchPending: boolean = false;\n  #dispatchRawListeners(): void {\n    if (!this.#rawDispatchPending) {\n      throw new Error(\"Invalid dispatch state!\");\n    }\n    for (const listener of this.#rawListeners) {\n      listener(); // TODO: wrap in a try?\n    }\n    this.#rawDispatchPending = false;\n  }\n\n  #freshListeners: Map<(value: T) => void, () => void> = new Map();\n  // TODO: Pick a better name.\n  public addFreshListener(listener: (value: T) => void): void {\n    const staleDropper: StaleDropper<T> = new StaleDropper<T>();\n    let lastResult: T | null = null;\n    const callback = async () => {\n      const result = await staleDropper.queue(this.get());\n      if (lastResult !== null && this.canReuse(lastResult, result)) {\n        return;\n      }\n      lastResult = result;\n      listener(result);\n    };\n    this.#freshListeners.set(listener, callback);\n    this.addRawListener(callback, { initial: true });\n  }\n\n  public removeFreshListener(listener: (value: T) => void): void {\n    this.removeRawListener(this.#freshListeners.get(listener)!); // TODO: throw a custom error?\n    this.#freshListeners.delete(listener);\n  }\n}\n\nexport abstract class TwistyPropSource<\n  OutputType,\n  InputType = OutputType,\n> extends TwistyPropParent<OutputType> {\n  #value: Promise<OutputType>;\n\n  public abstract getDefaultValue(): PromiseOrValue<OutputType>;\n\n  constructor(initialValue?: PromiseOrValue<InputType>) {\n    super();\n    this.#value = from(() => this.getDefaultValue());\n    if (initialValue) {\n      this.#value = this.deriveFromPromiseOrValue(initialValue, this.#value);\n    }\n  }\n\n  set(input: PromiseOrValue<InputType>): void {\n    this.#value = this.deriveFromPromiseOrValue(input, this.#value);\n\n    const sourceEventDetail: SourceEventDetail<OutputType> = {\n      sourceProp: this,\n      value: this.#value,\n      generation: ++globalSourceGeneration,\n    };\n    this.markStale(\n      new CustomEvent<SourceEventDetail<OutputType>>(\"stale\", {\n        detail: sourceEventDetail,\n      }),\n    );\n  }\n\n  async get(): Promise<OutputType> {\n    return this.#value;\n  }\n\n  protected async deriveFromPromiseOrValue(\n    input: PromiseOrValue<InputType>,\n    oldValuePromise: Promise<OutputType>,\n  ): Promise<OutputType> {\n    return this.derive(await input, oldValuePromise);\n  }\n\n  // TODO: add an indirect layer to cache the derivation?\n  protected abstract derive(\n    input: InputType,\n    oldValuePromise: Promise<OutputType>,\n  ): PromiseOrValue<OutputType>;\n}\n\nexport abstract class SimpleTwistyPropSource<\n  SimpleType,\n> extends TwistyPropSource<SimpleType> {\n  protected override derive(input: SimpleType): PromiseOrValue<SimpleType> {\n    return input;\n  }\n}\n\n// TODO: Can we support `null` as a valid output value without loosening type\n// safety?\nexport const NO_VALUE = Symbol(\"no value\");\nexport type NoValueType = typeof NO_VALUE;\n\nexport abstract class TwistyPropDerived<\n  InputTypes extends InputRecord,\n  OutputType,\n> extends TwistyPropParent<OutputType> {\n  // cachedInputs:\n  #parents: InputProps<InputTypes>;\n\n  constructor(\n    parents: InputProps<InputTypes>,\n    protected userVisibleErrorTracker?: UserVisibleErrorTracker,\n  ) {\n    super();\n    this.#parents = parents;\n    for (const parent of Object.values(parents)) {\n      (\n        parent as TwistyPropDerived<InputProps<InputTypes>, OutputType>\n      ).addChild(this);\n    }\n  }\n\n  #cachedLastSuccessfulCalculation: {\n    inputs: InputTypes;\n    output: Promise<OutputType>;\n    generation: number;\n  } | null = null;\n\n  #cachedLatestGenerationCalculation: {\n    output: Promise<OutputType>;\n    generation: number;\n  } | null = null;\n\n  public async get(): Promise<OutputType> {\n    const generation = this.lastSourceGeneration;\n\n    if (this.#cachedLatestGenerationCalculation?.generation === generation) {\n      return this.#cachedLatestGenerationCalculation.output;\n    }\n\n    const latestGenerationCalculation = {\n      generation,\n      output: this.#cacheDerive(\n        this.#getParents(),\n        generation,\n        this.#cachedLastSuccessfulCalculation,\n      ),\n    };\n    this.#cachedLatestGenerationCalculation = latestGenerationCalculation;\n\n    this.userVisibleErrorTracker?.reset();\n    return latestGenerationCalculation.output;\n  }\n\n  async #getParents(): Promise<InputTypes> {\n    const inputValuePromises: InputPromises<InputRecord> = {} as any; // TODO\n    for (const [key, parent] of Object.entries(this.#parents)) {\n      (inputValuePromises as Record<string, Promise<unknown>>)[key] = (\n        parent as TwistyPropParent<unknown>\n      ).get();\n    }\n\n    const inputs: InputTypes = {} as any; // TODO\n    for (const key in this.#parents) {\n      inputs[key] = (await (\n        inputValuePromises as Record<string, Promise<unknown>>\n      )[key]) as any;\n    }\n    return inputs;\n  }\n\n  async #cacheDerive(\n    inputsPromise: PromiseOrValue<InputTypes>,\n    generation: number,\n    cachedLatestGenerationCalculation: {\n      inputs: InputTypes;\n      output: Promise<OutputType>;\n      generation: number;\n    } | null = null,\n  ): Promise<OutputType> {\n    const inputs = await inputsPromise;\n\n    const cache = (output: OutputType): OutputType => {\n      this.#cachedLastSuccessfulCalculation = {\n        inputs,\n        output: Promise.resolve(output),\n        generation,\n      };\n      return output;\n    };\n\n    if (!cachedLatestGenerationCalculation) {\n      return cache(await this.derive(inputs));\n    }\n\n    const cachedInputs = cachedLatestGenerationCalculation.inputs;\n    for (const key in this.#parents) {\n      const parent = this.#parents[key];\n      if (!parent.canReuse(inputs[key], cachedInputs[key])) {\n        return cache(await this.derive(inputs));\n      }\n    }\n\n    return cachedLatestGenerationCalculation.output;\n  }\n\n  protected abstract derive(input: InputTypes): PromiseOrValue<OutputType>;\n}\n\nexport class FreshListenerManager {\n  #disconnectionFunctions: (() => void)[] = [];\n\n  addListener<T>(\n    prop: TwistyPropParent<T>,\n    listener: (value: T) => void,\n  ): void {\n    let disconnected = false;\n    const wrappedListener = (value: T) => {\n      if (disconnected) {\n        // TODO\n        // console.warn(\"Should be disconnected!\");\n        return;\n      }\n      listener(value);\n    };\n\n    prop.addFreshListener(wrappedListener);\n\n    this.#disconnectionFunctions.push(() => {\n      prop.removeFreshListener(wrappedListener);\n      disconnected = true;\n    });\n  }\n\n  // TODO: Figure out the signature to let us do overloads\n  /** @deprecated */\n  public addMultiListener3<U, V, W>(\n    props: [TwistyPropParent<U>, TwistyPropParent<V>, TwistyPropParent<W>],\n    listener: (values: [U, V, W]) => void,\n  ): void {\n    this.addMultiListener(props as any, listener as any); // TODO\n  }\n  public addMultiListener<U, V>(\n    props: [TwistyPropParent<U>, TwistyPropParent<V>],\n    listener: (values: [U, V]) => void,\n  ) {\n    let disconnected = false;\n\n    // We're going to get one initial call per prop. We'll ignore all but one.\n    let initialIgnoresLeft = props.length - 1;\n    const wrappedListener = async (_: any) => {\n      if (initialIgnoresLeft > 0) {\n        initialIgnoresLeft--;\n        return;\n      }\n      if (disconnected) {\n        // TODO\n        // console.warn(\"Should be disconnected!\");\n        return;\n      }\n      // We rely on `TwistyProp` caching to give us the full set of latest\n      // values efficiently.\n      const promises = (props as TwistyPropParent<any>[]).map((prop) =>\n        prop.get(),\n      );\n      const values = await Promise.all(promises);\n      listener(values as any); // TODO: fix up types\n    };\n\n    for (const prop of props) {\n      prop.addFreshListener(wrappedListener);\n    }\n\n    this.#disconnectionFunctions.push(() => {\n      for (const prop of props) {\n        prop.removeFreshListener(wrappedListener);\n      }\n      disconnected = true;\n    });\n  }\n\n  public disconnect(): void {\n    for (const disconnectionFunction of this.#disconnectionFunctions) {\n      disconnectionFunction();\n    }\n  }\n}\n", "// Debounces `requestAnimationFrame()`.\nexport class RenderScheduler {\n  private animFrameID: number | null = null;\n  private animFrame = this.animFrameWrapper.bind(this);\n  constructor(private callback: (timestamp: DOMHighResTimeStamp) => void) {}\n\n  requestIsPending(): boolean {\n    return !!this.animFrameID;\n  }\n\n  requestAnimFrame(): void {\n    if (!this.animFrameID) {\n      this.animFrameID = requestAnimationFrame(this.animFrame);\n    }\n  }\n\n  cancelAnimFrame(): void {\n    if (this.animFrameID) {\n      cancelAnimationFrame(this.animFrameID);\n      this.animFrameID = 0;\n    }\n  }\n\n  private animFrameWrapper(timestamp: DOMHighResTimeStamp): void {\n    this.animFrameID = 0;\n    this.callback(timestamp);\n  }\n}\n\n// An interface for classes to use to expose their scheduling.\nexport interface Schedulable {\n  scheduleRender(): void;\n}\n", "import { SimpleTwistyPropSource } from \"../../TwistyProp\";\n\n// TODO: turn these maps into lists?\nexport const hintFaceletStyles = {\n  floating: true, // default\n  none: true,\n};\nexport type HintFaceletStyle = keyof typeof hintFaceletStyles;\nexport type HintFaceletStyleWithAuto = HintFaceletStyle | \"auto\";\n\nexport class HintFaceletProp extends SimpleTwistyPropSource<HintFaceletStyleWithAuto> {\n  getDefaultValue(): HintFaceletStyleWithAuto {\n    return \"auto\";\n  }\n}\n", "export const TAU = Math.PI * 2;\nexport const DEGREES_PER_RADIAN = 360 / TAU;\n", "// Workarounds for `node`.\n// TODO: figure out how to remove this.\n\n// This stub does not need to be callable, just constructable to satisfy the `node` loader.\nclass HTMLElementStub {}\n\nlet HTMLElementShim: typeof HTMLElement;\nif (globalThis.HTMLElement) {\n  HTMLElementShim = HTMLElement;\n} else {\n  HTMLElementShim = HTMLElementStub as any;\n}\n\nexport { HTMLElementShim };\n\nclass CustomElementsStub {\n  define(): void {\n    // nothing\n  }\n}\n\nlet customElementsShim: typeof customElements;\n\nif (globalThis.customElements) {\n  customElementsShim = customElements;\n} else {\n  customElementsShim = new CustomElementsStub() as any;\n}\n\nexport { customElementsShim };\n", "import {\n  HTMLElementShim,\n  customElementsShim,\n} from \"./node-custom-element-shims\";\n\nexport class CSSSource {\n  constructor(private sourceText: string) {\n    // TODO: Replace with adopted style sheets some day if we can.\n    // const blob = new Blob([sourceText], {\n    //   type: \"text/utf8\",\n    // });\n    // this.url = URL.createObjectURL(blob);\n  }\n\n  getAsString(): string {\n    return this.sourceText;\n  }\n}\n\n// - Wrapped element\n//   - Shadow root\n//     - Content wrapper\nexport class ManagedCustomElement extends HTMLElementShim {\n  public readonly shadow: ShadowRoot; // TODO: hide this\n  public readonly contentWrapper: HTMLDivElement; // TODO: can we get rid of this wrapper?\n\n  #cssSourceMap: Map<CSSSource, HTMLStyleElement> = new Map();\n  constructor(options?: { mode: \"open\" | \"closed\" }) {\n    super();\n    this.shadow = this.attachShadow({ mode: options?.mode ?? \"closed\" });\n\n    this.contentWrapper = document.createElement(\"div\");\n    this.contentWrapper.classList.add(\"wrapper\");\n    this.shadow.appendChild(this.contentWrapper);\n  }\n\n  // Add the source, if not already added.\n  // Returns the existing if it's already on the element.\n  public addCSS(cssSource: CSSSource): HTMLStyleElement {\n    const existing = this.#cssSourceMap.get(cssSource);\n    if (existing) {\n      return existing;\n    }\n\n    const cssElem: HTMLStyleElement = document.createElement(\"style\");\n    cssElem.textContent = cssSource.getAsString();\n\n    this.#cssSourceMap.set(cssSource, cssElem);\n    this.shadow.appendChild(cssElem);\n    return cssElem;\n  }\n\n  // Remove the source, if it's currently added.\n  public removeCSS(cssSource: CSSSource): void {\n    const cssElem = this.#cssSourceMap.get(cssSource);\n    if (!cssElem) {\n      return;\n    }\n    this.shadow.removeChild(cssElem);\n    this.#cssSourceMap.delete(cssSource);\n  }\n\n  public addElement<T extends Node>(element: T): T {\n    return this.contentWrapper.appendChild(element);\n  }\n\n  public prependElement<T extends Node>(element: T): void {\n    this.contentWrapper.prepend(element);\n  }\n\n  public removeElement<T extends Node>(element: T): T {\n    return this.contentWrapper.removeChild(element);\n  }\n}\n\ncustomElementsShim.define(\n  \"twisty-managed-custom-element\",\n  ManagedCustomElement,\n);\n", "/**\n * @author mrdoob / http://mrdoob.com/\n * ESM conversion by Lucas Garron, 2021-12-21\n */\n\nconst performance:\n  | null\n  | (Performance & {\n      memory?: {\n        usedJSHeapSize: number;\n        jsHeapSizeLimit: number;\n      };\n    }) = globalThis.performance;\n\nexport class Stats {\n  mode = 0;\n\n  dom = document.createElement(\"div\");\n\n  constructor() {\n    this.dom.style.cssText =\n      \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";\n    this.dom.addEventListener(\n      \"click\",\n      (event) => {\n        event.preventDefault();\n        this.showPanel(++this.mode % this.dom.children.length);\n      },\n      false,\n    );\n\n    this.showPanel(0);\n  }\n\n  addPanel(panel: StatsPanel): StatsPanel {\n    this.dom.appendChild(panel.dom);\n    return panel;\n  }\n\n  showPanel(id: number): void {\n    for (let i = 0; i < this.dom.children.length; i++) {\n      (this.dom.children[i] as HTMLElement).style.display =\n        i === id ? \"block\" : \"none\";\n    }\n\n    this.mode = id;\n  }\n\n  beginTime = (performance || Date).now();\n  prevTime = this.beginTime;\n  frames = 0;\n\n  fpsPanel = this.addPanel(new StatsPanel(\"FPS\", \"#0ff\", \"#002\"));\n  msPanel = this.addPanel(new StatsPanel(\"MS\", \"#0f0\", \"#020\"));\n  memPanel = performance?.memory\n    ? this.addPanel(new StatsPanel(\"MB\", \"#f08\", \"#201\"))\n    : null;\n  REVISION = 16;\n\n  begin() {\n    this.beginTime = (performance || Date).now();\n  }\n\n  end() {\n    this.frames++;\n\n    const time = (performance || Date).now();\n\n    this.msPanel.update(time - this.beginTime, 200);\n\n    if (time >= this.prevTime + 1000) {\n      this.fpsPanel.update((this.frames * 1000) / (time - this.prevTime), 100);\n\n      this.prevTime = time;\n      this.frames = 0;\n\n      if (this.memPanel) {\n        const memory = performance!.memory!;\n        this.memPanel.update(\n          memory.usedJSHeapSize / 1048576,\n          memory.jsHeapSizeLimit / 1048576,\n        );\n      }\n    }\n\n    return time;\n  }\n\n  update() {\n    this.beginTime = this.end();\n  }\n}\n\nconst PR = Math.round(globalThis?.window?.devicePixelRatio ?? 1);\n\nconst WIDTH = 80 * PR;\nconst HEIGHT = 48 * PR;\nconst TEXT_X = 3 * PR;\nconst TEXT_Y = 2 * PR;\nconst GRAPH_X = 3 * PR;\nconst GRAPH_Y = 15 * PR;\nconst GRAPH_WIDTH = 74 * PR;\nconst GRAPH_HEIGHT = 30 * PR;\n\nexport class StatsPanel {\n  min = Infinity;\n  max = 0;\n  dom = document.createElement(\"canvas\");\n  context = this.dom.getContext(\"2d\")!;\n  constructor(private name: string, private fg: string, private bg: string) {\n    this.dom.width = WIDTH;\n    this.dom.height = HEIGHT;\n    this.dom.style.cssText = \"width:80px;height:48px\";\n\n    this.context.font = `bold ${9 * PR}px Helvetica,Arial,sans-serif`;\n    this.context.textBaseline = \"top\";\n\n    this.context.fillStyle = bg;\n    this.context.fillRect(0, 0, WIDTH, HEIGHT);\n\n    this.context.fillStyle = fg;\n    this.context.fillText(name, TEXT_X, TEXT_Y);\n    this.context.fillRect(GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT);\n\n    this.context.fillStyle = bg;\n    this.context.globalAlpha = 0.9;\n    this.context.fillRect(GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT);\n  }\n\n  update(value: number, maxValue: number) {\n    this.min = Math.min(this.min, value);\n    this.max = Math.max(this.max, value);\n\n    this.context.fillStyle = this.bg;\n    this.context.globalAlpha = 1;\n    this.context.fillRect(0, 0, WIDTH, GRAPH_Y);\n    this.context.fillStyle = this.fg;\n    this.context.fillText(\n      `${Math.round(value)} ${this.name} (${Math.round(this.min)}-${Math.round(\n        this.max,\n      )})`,\n      TEXT_X,\n      TEXT_Y,\n    );\n\n    this.context.drawImage(\n      this.dom,\n      GRAPH_X + PR,\n      GRAPH_Y,\n      GRAPH_WIDTH - PR,\n      GRAPH_HEIGHT,\n      GRAPH_X,\n      GRAPH_Y,\n      GRAPH_WIDTH - PR,\n      GRAPH_HEIGHT,\n    );\n\n    this.context.fillRect(\n      GRAPH_X + GRAPH_WIDTH - PR,\n      GRAPH_Y,\n      PR,\n      GRAPH_HEIGHT,\n    );\n\n    this.context.fillStyle = this.bg;\n    this.context.globalAlpha = 0.9;\n    this.context.fillRect(\n      GRAPH_X + GRAPH_WIDTH - PR,\n      GRAPH_Y,\n      PR,\n      Math.round((1 - value / maxValue) * GRAPH_HEIGHT),\n    );\n  }\n}\n", "import { from } from \"../../vendor/mit/p-lazy/p-lazy\";\n\n// TODO can we remove the cached proxy?\n\n// In theory we can, but we've run into situations where imports are not properly cached.\nlet cachedConstructorProxy: Promise<\n  typeof import(\"./dynamic-entries/twisty-dynamic-3d\")\n> | null = null;\n\nexport async function proxy3D(): Promise<\n  typeof import(\"./dynamic-entries/twisty-dynamic-3d\")\n> {\n  return (cachedConstructorProxy ??= import(\n    \"./dynamic-entries/twisty-dynamic-3d\"\n  ));\n}\n\nexport const THREEJS: Promise<typeof import(\"three\")> = from(\n  async () => (await proxy3D()).T3I,\n);\n", "let globalPixelRatioOverride: number | null = null;\nexport function setGlobalPixelRatioOverride(override: number | null): void {\n  globalPixelRatioOverride = override;\n}\n\n// TODO: Handle if you move across screens?\nexport function pixelRatio(): number {\n  return globalPixelRatioOverride ?? (devicePixelRatio || 1);\n}\n", "import { CSSSource } from \"../ManagedCustomElement\";\n\n// The `position` values are a hack for a bug in Safari where the canvas either\n// grows infinitely, or takes up the full `fr` of any encompassing grid (making\n// the contents of that element e.g. over 100% of its height). `contain:\n// content` is a good fix for this, but there is no indication that Safari will\n// support it soon. https://developer.mozilla.org/en-US/docs/Web/CSS/contain\n\nexport const twisty3DVantageCSS = new CSSSource(\n  `\n:host {\n  width: 384px;\n  height: 256px;\n  display: grid;\n}\n\n.wrapper {\n  width: 100%;\n  height: 100%;\n  display: grid;\n  overflow: hidden;\n  place-content: center;\n  contain: strict;\n}\n\n.loading {\n  width: 4em;\n  height: 4em;\n  border-radius: 2.5em;\n  border: 0.5em solid rgba(0, 0, 0, 0);\n  border-top: 0.5em solid rgba(0, 0, 0, 0.7);\n  border-right: 0.5em solid rgba(0, 0, 0, 0.7);\n  animation: fade-in-delayed 4s, rotate 1s linear infinite;\n}\n\n@keyframes fade-in-delayed {\n  0% { opacity: 0; }\n  25% {opacity: 0; }\n  100% { opacity: 1; }\n}\n\n@keyframes rotate {\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n}\n\n/* TODO: This is due to stats hack. Replace with \\`canvas\\`. */\n.wrapper > canvas {\n  max-width: 100%;\n  max-height: 100%;\n  animation: fade-in 0.25s ease-in;\n}\n\n@keyframes fade-in {\n  from { opacity: 0; }\n  to { opacity: 1; }\n}\n\n.wrapper.invisible {\n  opacity: 0;\n}\n\n.wrapper.drag-input-enabled > canvas {\n  cursor: grab;\n}\n\n.wrapper.drag-input-enabled > canvas:active {\n  cursor: grabbing;\n}\n`,\n);\n", "// export class Drag() {\n\n// }\n\ninterface DragInfo {\n  attachedInfo: Record<any, any>;\n  hasMoved: boolean;\n  lastClientX: number;\n  lastClientY: number;\n  lastTimeStamp: number;\n}\n\ntype PointerID = number;\n\nexport interface DragMovementInfo {\n  attachedInfo: Record<any, any>;\n  movementX: number;\n  movementY: number;\n  elapsedMs: number;\n}\n\nexport interface UpInfo {\n  attachedInfo: Record<any, any>;\n}\n\nexport interface PressInfo {\n  normalizedX: number;\n  normalizedY: number;\n  rightClick: boolean;\n  keys: {\n    // TODO: group these\n    altKey: boolean;\n    ctrlOrMetaKey: boolean;\n    shiftKey: boolean;\n  };\n}\n\n// Chrome can report movements as low as `0.0000152587890625` even if the cursor did not move at all. So we need a treshold insteadl.\nconst MOVEMENT_EPSILON = 0.1; // px\n\nexport class DragTracker extends EventTarget {\n  #dragInfoMap: Map<PointerID, DragInfo> = new Map();\n\n  constructor(public readonly target: HTMLElement) {\n    super();\n  }\n\n  // Idempotent\n  start() {\n    this.addTargetListener(\"pointerdown\", this.onPointerDown.bind(this));\n    // Prevent right-click on desktop (only tested on macOS Chrome/Safari/Firefox) so we can detect right-click moves.\n    // TODO: Can we do this selectively, e.g. only on the puzzle? That way we could allow right-click to download the canvas. Unfortunately, it would probably require a sync calculation.\n    this.addTargetListener(\"contextmenu\", (e) => {\n      e.preventDefault();\n    });\n    // Prevent touch scrolling (preventing default on `pointermove` doesn't work).\n    this.addTargetListener(\"touchmove\", (e) => e.preventDefault());\n    // Prevent zooming on double-tap (iOS).\n    // This is because `dblclick` works to zoom in, but does *not* work to zoom out. So the user can get stuck zoomed into the player without a way to zoom out.\n    this.addTargetListener(\"dblclick\", (e) => e.preventDefault());\n  }\n\n  // Idempotent\n  stop(): void {\n    for (const [eventType, listener] of this.#targetListeners.entries()) {\n      this.target.removeEventListener(eventType, listener);\n    }\n    this.#targetListeners.clear();\n    this.#lazyListenersRegistered = false;\n  }\n\n  #targetListeners = new Map<string, (e: MouseEvent) => any>();\n  addTargetListener(eventType: string, listener: (e: MouseEvent) => any) {\n    if (!this.#targetListeners.has(eventType)) {\n      this.target.addEventListener(eventType, listener);\n      this.#targetListeners.set(eventType, listener);\n    }\n  }\n\n  // This allows us to avoid getting a callback every time the pointer moves over the canvas, until we have a down event.\n  // TODO: Ideally we'd also support unregistering when we're certain there are no more active touches. But this means we need to properly handle every way a pointer \"click\" can end, which is tricky across environments (due to e.g. mouse vs. touch vs. stylues, canvas/viewport/window/scroll boundaries, right-click and other ways of losing focus, etc.), so we conservatively leave the listeners on.\n  #lazyListenersRegistered: boolean = false;\n  #registerLazyListeners(): void {\n    if (this.#lazyListenersRegistered) {\n      return;\n    }\n    this.addTargetListener(\"pointermove\", this.onPointerMove.bind(this)); // TODO: only register this after pointer down.\n    this.addTargetListener(\"pointerup\", this.onPointerUp.bind(this));\n    this.#lazyListenersRegistered = true;\n  }\n\n  #clear(e: PointerEvent): void {\n    this.#dragInfoMap.delete(e.pointerId);\n  }\n\n  // `null`: means: ignore this result (no movement, or not\n  #trackDrag(e: PointerEvent): {\n    movementInfo: DragMovementInfo | null;\n    hasMoved: boolean;\n  } {\n    // TODO: Find a way to detect if this is an active press, in a way that works cross-platform.\n    // if (e.buttons === 0) {\n    //   return { movementInfo: null, hasMoved: false };\n    // }\n    const existing = this.#dragInfoMap.get(e.pointerId);\n    if (!existing) {\n      return { movementInfo: null, hasMoved: false };\n    }\n    // We would try to use `e.movementX`/`e.movementY`, except Safari:\n    // - Does not have those values on i[Pad]OS.\n    // - Will always report `0` for these values on macOS.\n    // https://bugs.webkit.org/show_bug.cgi?id=220194\n    //\n    // The following are all insufficiently powerful for detecting the Safari `0` bug:\n    // - `\"movementX\" in e`\n    // - `e.movementX !== \"undefined\"`\n    // - `e.hasOwnProperty(\"movementX\")`\n\n    let movementInfo: DragMovementInfo;\n    if ((e.movementX ?? 0) !== 0 || (e.movementY ?? 0) !== 0) {\n      // We optimistically try to catch sub-pixel movements in Chrome.\n      movementInfo = {\n        attachedInfo: existing.attachedInfo,\n        movementX: e.movementX,\n        movementY: e.movementY,\n        elapsedMs: e.timeStamp - existing.lastTimeStamp,\n      };\n    } else {\n      movementInfo = {\n        attachedInfo: existing.attachedInfo,\n        movementX: e.clientX - existing.lastClientX,\n        movementY: e.clientY - existing.lastClientY,\n        elapsedMs: e.timeStamp - existing.lastTimeStamp,\n      };\n    }\n    existing.lastClientX = e.clientX;\n    existing.lastClientY = e.clientY;\n    existing.lastTimeStamp = e.timeStamp;\n    if (\n      Math.abs(movementInfo.movementX) < MOVEMENT_EPSILON &&\n      Math.abs(movementInfo.movementY) < MOVEMENT_EPSILON\n    ) {\n      return { movementInfo: null, hasMoved: existing.hasMoved };\n    } else {\n      existing.hasMoved = true;\n      return { movementInfo, hasMoved: existing.hasMoved };\n    }\n  }\n\n  private onPointerDown(e: PointerEvent) {\n    this.#registerLazyListeners();\n    const newDragInfo: DragInfo = {\n      attachedInfo: {},\n      hasMoved: false,\n      lastClientX: e.clientX,\n      lastClientY: e.clientY,\n      lastTimeStamp: e.timeStamp,\n    };\n    this.#dragInfoMap.set(e.pointerId, newDragInfo);\n    this.target.setPointerCapture(e.pointerId);\n  }\n\n  private onPointerMove(e: PointerEvent) {\n    const movementInfo = this.#trackDrag(e).movementInfo;\n    if (movementInfo) {\n      e.preventDefault();\n      this.dispatchEvent(\n        new CustomEvent(\"move\", {\n          detail: movementInfo,\n        }),\n      );\n    }\n  }\n\n  private onPointerUp(e: PointerEvent) {\n    const trackDragResult = this.#trackDrag(e);\n    const existing = this.#dragInfoMap.get(e.pointerId)!; // TODO\n    this.#clear(e);\n    this.target.releasePointerCapture(e.pointerId); // TODO: unnecessary?\n    let event: CustomEvent;\n    if (trackDragResult.hasMoved) {\n      // TODO: send proper movement/momentum since last move event.\n      event = new CustomEvent<UpInfo>(\"up\", {\n        detail: { attachedInfo: existing.attachedInfo },\n      });\n    } else {\n      const { altKey, ctrlKey, metaKey, shiftKey } = e;\n      event = new CustomEvent<PressInfo>(\"press\", {\n        detail: {\n          normalizedX: (e.offsetX / this.target.offsetWidth) * 2 - 1,\n          normalizedY: 1 - (e.offsetY / this.target.offsetHeight) * 2,\n          rightClick: !!(e.button & 2),\n          keys: {\n            altKey,\n            ctrlOrMetaKey: ctrlKey || metaKey,\n            shiftKey,\n          },\n        },\n      });\n    }\n    this.dispatchEvent(event);\n  }\n}\n", "// TODO: https://stackoverflow.com/a/40443642\n\n// let shareAllNewRenderers: boolean = false;\n\n// // WARNING: The current shared renderer implementation is not every efficient.\n// // Avoid using for players that are likely to have dimensions approaching 1 megapixel or higher.\n// // TODO: use a dedicated renderer while fullscreen?\n// export function experimentalSetShareAllNewRenderers(share: boolean): void {\n//   shareAllNewRenderers = share;\n// }\n\n// const sharedRenderer: WebGLRenderer | null = null;\n\nimport { THREEJS } from \"../../heavy-code-imports/3d\";\nimport type { Camera, Scene, WebGLRenderer } from \"three\";\nimport { pixelRatio } from \"../canvas\";\n\nconst renderers: Promise<WebGLRenderer>[] = [];\n\n// Render result is guaranteed to be available synchronously at resolution time.\nexport async function rawRenderPooled(\n  width: number,\n  height: number,\n  scene: Scene,\n  camera: Camera,\n): Promise<HTMLCanvasElement> {\n  // At most one in the pool for now.\n  if (renderers.length === 0) {\n    renderers.push(newRenderer());\n  }\n  const renderer = await renderers[0];\n  // TODO: scissoring\n  renderer.setSize(width, height); // TODO: is it faster if we cache values and only call this when necessary?\n  renderer.render(scene, camera);\n\n  return renderer.domElement;\n}\n\n// let haveSet = false;\nexport async function renderPooled(\n  width: number,\n  height: number,\n  canvas: HTMLCanvasElement,\n  scene: Scene,\n  camera: Camera,\n): Promise<void> {\n  if (width === 0 || height === 0) {\n    return;\n  }\n  // At most one in the pool for now.\n  if (renderers.length === 0) {\n    renderers.push(newRenderer());\n  }\n\n  const rendererCanvas = await rawRenderPooled(width, height, scene, camera);\n\n  // TODO: Should we cache this? Seems to take about 0.0001ms to get.\n  const context = canvas.getContext(\"2d\")!;\n  context.clearRect(0, 0, canvas.width, canvas.height);\n  context.drawImage(rendererCanvas, 0, 0);\n}\n\nexport async function newRenderer(): Promise<WebGLRenderer> {\n  const rendererConstructor = (await THREEJS).WebGLRenderer;\n  const renderer = new rendererConstructor({\n    antialias: true,\n    alpha: true,\n  });\n  renderer.setPixelRatio(pixelRatio());\n  return renderer;\n}\n", "import type { Vector3 } from \"three\";\nimport { RenderScheduler } from \"../../controllers/RenderScheduler\";\nimport { THREEJS } from \"../../heavy-code-imports/3d\";\nimport type { OrbitCoordinates } from \"../../model/props/viewer/OrbitCoordinatesRequestProp\";\nimport type { TwistyPlayerModel } from \"../../model/TwistyPlayerModel\";\nimport type { DragMovementInfo, DragTracker } from \"./DragTracker\";\nimport { DEGREES_PER_RADIAN } from \"./TAU\";\n\nconst INERTIA_DEFAULT: boolean = true;\n\nconst INERTIA_DURATION_MS = 500;\n// If the first inertial render is this long after the last move, we assume the\n// user has halted the cursor and we consider inertia to have \"timed out\". We\n// never begin animating the inertia.\nconst INERTIA_TIMEOUT_MS = 50;\n\nconst VERTICAL_MOVEMENT_BASE_SCALE = 0.75;\n\n// progress is from 0 to 1.\nfunction momentumScale(progress: number) {\n  // This is the exponential curve flipped so that\n  // - The slope at progress = 0 is 1 (this corresponds to \"x = 1\" on the normal\n  //   curve).\n  // - The scale exponentially \"decays\" until progress = 1.\n  // This means the scale at the end will be about 0.418\n  return (Math.exp(1 - progress) - (1 - progress)) / (1 - Math.E) + 1;\n}\n\nclass Inertia {\n  private scheduler = new RenderScheduler(this.render.bind(this));\n  private lastTimestamp: number;\n  constructor(\n    private startTimestamp: number,\n    private momentumX: number,\n    private momentumY: number,\n    private callback: (movementX: number, movementY: number) => void,\n  ) {\n    this.scheduler.requestAnimFrame();\n    this.lastTimestamp = startTimestamp;\n  }\n\n  private render(now: DOMHighResTimeStamp) {\n    const progressBefore =\n      (this.lastTimestamp - this.startTimestamp) / INERTIA_DURATION_MS;\n    const progressAfter = Math.min(\n      1,\n      (now - this.startTimestamp) / INERTIA_DURATION_MS,\n    );\n\n    if (\n      progressBefore === 0 &&\n      progressAfter > INERTIA_TIMEOUT_MS / INERTIA_DURATION_MS\n    ) {\n      // The user has already paused for a while. Don't start any inertia.\n      return;\n    }\n\n    const delta = momentumScale(progressAfter) - momentumScale(progressBefore);\n\n    // TODO: For now, we only carry horizontal momentum. If this should stay, we\n    // can remove the plumbing for the Y dimension.\n    this.callback(this.momentumX * delta * 1000, this.momentumY * delta * 1000);\n\n    if (progressAfter < 1) {\n      this.scheduler.requestAnimFrame();\n    }\n    this.lastTimestamp = now;\n  }\n}\n\nexport async function positionToOrbitCoordinates(\n  position: Vector3,\n): Promise<OrbitCoordinates> {\n  const spherical = new (await THREEJS).Spherical();\n  spherical.setFromVector3(position);\n  return {\n    latitude: 90 - spherical.phi * DEGREES_PER_RADIAN,\n    longitude: spherical.theta * DEGREES_PER_RADIAN,\n    distance: spherical.radius,\n  };\n}\n\ninterface TwistyOrbitControlsDragAttachedInfo {\n  lastTemperedX: number;\n  lastTemperedY: number;\n  timestamp: number;\n}\n\n// TODO: change mouse cursor while moving.\nexport class TwistyOrbitControls {\n  /** @deprecated */\n  experimentalInertia: boolean = INERTIA_DEFAULT;\n  private onMovementBound = this.onMovement.bind(this);\n  public experimentalHasBeenMoved: boolean = false;\n  constructor(\n    private model: TwistyPlayerModel,\n    private mirror: boolean,\n    private canvas: HTMLCanvasElement,\n    private dragTracker: DragTracker,\n  ) {\n    this.dragTracker.addEventListener(\"move\", this.onMove.bind(this));\n    this.dragTracker.addEventListener(\"up\", this.onUp.bind(this));\n  }\n\n  // f is the fraction of the canvas traversed per ms.\n  temperMovement(f: number): number {\n    // This is scaled to be linear for small values, but to reduce large values\n    // by a significant factor.\n    return (Math.sign(f) * Math.log(Math.abs(f * 10) + 1)) / 6;\n  }\n\n  onMove(e: CustomEvent<DragMovementInfo>): void {\n    e.detail.attachedInfo ??= {};\n\n    const { temperedX, temperedY } = this.onMovement(\n      e.detail.movementX,\n      e.detail.movementY,\n    );\n    const attachedInfo = e.detail\n      .attachedInfo as TwistyOrbitControlsDragAttachedInfo;\n    attachedInfo.lastTemperedX = temperedX * 10;\n    attachedInfo.lastTemperedY = temperedY * 10;\n    attachedInfo.timestamp = e.timeStamp; // TODO\n  }\n\n  onMovement(\n    movementX: number,\n    movementY: number,\n  ): {\n    temperedX: number;\n    temperedY: number;\n  } {\n    const scale = this.mirror ? -1 : 1;\n\n    // TODO: refactor\n    const minDim = Math.min(this.canvas.offsetWidth, this.canvas.offsetHeight);\n\n    const temperedX = this.temperMovement(movementX / minDim);\n    const temperedY = this.temperMovement(\n      (movementY / minDim) * VERTICAL_MOVEMENT_BASE_SCALE,\n    );\n    this.model.twistySceneModel.orbitCoordinatesRequest.set(\n      (async () => {\n        const prevCoords =\n          await this.model.twistySceneModel.orbitCoordinates.get();\n\n        const newCoords = {\n          latitude:\n            prevCoords.latitude + 2 * temperedY * DEGREES_PER_RADIAN * scale,\n          longitude: prevCoords.longitude - 2 * temperedX * DEGREES_PER_RADIAN,\n        };\n        return newCoords;\n      })(),\n    );\n    return { temperedX, temperedY };\n  }\n\n  onUp(e: CustomEvent<DragMovementInfo>): void {\n    e.preventDefault();\n    if (\n      \"lastTemperedX\" in e.detail.attachedInfo &&\n      \"lastTemperedY\" in e.detail.attachedInfo &&\n      \"timestamp\" in e.detail.attachedInfo &&\n      e.timeStamp - e.detail.attachedInfo.timestamp < 60 // TODO\n    ) {\n      new Inertia(\n        e.timeStamp, // TODO\n        (e.detail.attachedInfo as TwistyOrbitControlsDragAttachedInfo)\n          .lastTemperedX,\n        (e.detail.attachedInfo as TwistyOrbitControlsDragAttachedInfo)\n          .lastTemperedY,\n        this.onMovementBound,\n      ); // TODO: cancel inertia\n    }\n  }\n}\n", "import type { PerspectiveCamera, WebGLRenderer } from \"three\";\nimport { Stats } from \"../../../vendor/mit/three/examples/jsm/libs/stats.modified.module\";\nimport { THREEJS } from \"../../heavy-code-imports/3d\";\nimport { StaleDropper } from \"../../model/PromiseFreshener\";\nimport type { TwistyPropParent } from \"../../model/props/TwistyProp\";\nimport type { OrbitCoordinates } from \"../../model/props/viewer/OrbitCoordinatesRequestProp\";\nimport type { TwistyPlayerModel } from \"../../model/TwistyPlayerModel\";\nimport { RenderScheduler } from \"../../controllers/RenderScheduler\";\nimport { ManagedCustomElement } from \"../ManagedCustomElement\";\nimport { customElementsShim } from \"../node-custom-element-shims\";\nimport { pixelRatio } from \"../canvas\";\nimport { twisty3DVantageCSS } from \"./Twisty3DVantage.css\";\nimport { DragTracker, PressInfo } from \"./DragTracker\";\nimport { newRenderer, renderPooled } from \"./RendererPool\";\nimport { DEGREES_PER_RADIAN } from \"./TAU\";\nimport type { Twisty3DSceneWrapper } from \"./Twisty3DSceneWrapper\";\nimport { TwistyOrbitControls } from \"./TwistyOrbitControls\";\nimport type { DragInputMode } from \"../../model/props/puzzle/state/DragInputProp\";\nimport { twistyDebugGlobals } from \"../../debug\";\n\nexport async function setCameraFromOrbitCoordinates(\n  camera: PerspectiveCamera,\n  orbitCoordinates: OrbitCoordinates,\n  backView: boolean = false,\n): Promise<void> {\n  const spherical = new (await THREEJS).Spherical(\n    orbitCoordinates.distance,\n    (90 - (backView ? -1 : 1) * orbitCoordinates.latitude) / DEGREES_PER_RADIAN,\n    ((backView ? 180 : 0) + orbitCoordinates.longitude) / DEGREES_PER_RADIAN,\n  );\n  spherical.makeSafe();\n  camera.position.setFromSpherical(spherical);\n  camera.lookAt(0, 0, 0);\n}\n\nlet dedicatedRenderersSoFar = 0;\nconst DEFAULT_MAX_DEDICATED_RENDERERS = 2; // This allows for a front view and a back view (or two separate front views).\nlet sharingRenderers = false;\nfunction shareRenderer(): boolean {\n  if (twistyDebugGlobals.shareAllNewRenderers !== \"auto\") {\n    if (!twistyDebugGlobals.shareAllNewRenderers) {\n      dedicatedRenderersSoFar++;\n    }\n    return twistyDebugGlobals.shareAllNewRenderers !== \"never\";\n  }\n  if (dedicatedRenderersSoFar < DEFAULT_MAX_DEDICATED_RENDERERS) {\n    dedicatedRenderersSoFar++;\n    return false;\n  } else {\n    sharingRenderers = true;\n    return true;\n  }\n}\n\nexport function haveStartedSharingRenderers(): boolean {\n  return sharingRenderers;\n}\n\nexport class Twisty3DVantage extends ManagedCustomElement {\n  scene: Twisty3DSceneWrapper | null = null;\n\n  stats: Stats | null = null;\n\n  private rendererIsShared: boolean = shareRenderer();\n\n  loadingElement: HTMLDivElement | null = null;\n  constructor(\n    private model?: TwistyPlayerModel,\n    scene?: Twisty3DSceneWrapper,\n    private options?: { backView?: boolean },\n  ) {\n    super();\n    this.scene = scene ?? null;\n\n    this.loadingElement = this.addElement(document.createElement(\"div\"));\n    this.loadingElement.classList.add(\"loading\");\n\n    if (twistyDebugGlobals.showRenderStats) {\n      this.stats = new Stats();\n      this.stats.dom.style.position = \"absolute\";\n      this.contentWrapper.appendChild(this.stats.dom);\n    }\n  }\n\n  async connectedCallback(): Promise<void> {\n    this.addCSS(twisty3DVantageCSS);\n    this.addElement((await this.canvasInfo()).canvas);\n\n    this.#onResize();\n    const observer = new ResizeObserver(this.#onResize.bind(this));\n    observer.observe(this.contentWrapper);\n    this.orbitControls(); // Instantiate orbit controls\n    this.#setupBasicPresses();\n\n    this.scheduleRender();\n  }\n\n  async #setupBasicPresses(): Promise<void> {\n    const dragTracker = await this.#dragTracker();\n    dragTracker.addEventListener(\"press\", async (e: CustomEvent<PressInfo>) => {\n      const movePressInput =\n        await this.model!.twistySceneModel.movePressInput.get();\n      if (movePressInput !== \"basic\") {\n        return;\n      }\n      this.dispatchEvent(\n        new CustomEvent(\"press\", {\n          detail: {\n            pressInfo: e.detail,\n            cameraPromise: this.camera(),\n          },\n        }),\n      );\n    });\n  }\n\n  #onResizeStaleDropper = new StaleDropper<PerspectiveCamera>();\n\n  async clearCanvas(): Promise<void> {\n    if (this.rendererIsShared) {\n      const canvasInfo = await this.canvasInfo();\n      canvasInfo.context.clearRect(\n        0,\n        0,\n        canvasInfo.canvas.width,\n        canvasInfo.canvas.height,\n      );\n    } else {\n      const renderer = await this.renderer();\n      const context = renderer.getContext();\n      context.clear(context.COLOR_BUFFER_BIT);\n    }\n  }\n\n  // TODO: Why doesn't this work for the top-right back view height?\n  #width: number = 0;\n  #height: number = 0;\n  async #onResize(): Promise<void> {\n    const camera = await this.#onResizeStaleDropper.queue(this.camera());\n\n    const w = this.contentWrapper.clientWidth;\n    const h = this.contentWrapper.clientHeight;\n    this.#width = w;\n    this.#height = h;\n    const off = 0;\n    let yoff = 0;\n    let excess = 0;\n    if (h > w) {\n      excess = h - w;\n      yoff = -Math.floor(0.5 * excess);\n    }\n    camera.aspect = w / h;\n    camera.setViewOffset(w, h - excess, off, yoff, w, h);\n    camera.updateProjectionMatrix(); // TODO\n\n    this.clearCanvas();\n    if (this.rendererIsShared) {\n      const canvasInfo = await this.canvasInfo();\n\n      canvasInfo.canvas.width = w * pixelRatio();\n      canvasInfo.canvas.height = h * pixelRatio();\n      canvasInfo.canvas.style.width = `${w.toString()}px`;\n      canvasInfo.canvas.style.height = `${h.toString()}px`;\n    } else {\n      const renderer = await this.renderer();\n      renderer.setSize(w, h, true);\n    }\n\n    this.scheduleRender();\n  }\n\n  #cachedRenderer: Promise<WebGLRenderer> | null = null;\n  async renderer(): Promise<WebGLRenderer> {\n    if (this.rendererIsShared) {\n      throw new Error(\"renderer expected to be shared.\");\n    }\n    return (this.#cachedRenderer ??= newRenderer());\n  }\n\n  #cachedCanvas: Promise<{\n    canvas: HTMLCanvasElement;\n    context: CanvasRenderingContext2D;\n  }> | null = null;\n  async canvasInfo(): Promise<{\n    canvas: HTMLCanvasElement;\n    context: CanvasRenderingContext2D;\n  }> {\n    return (this.#cachedCanvas ??= (async () => {\n      let canvas: HTMLCanvasElement;\n      if (this.rendererIsShared) {\n        canvas = this.addElement(document.createElement(\"canvas\"));\n      } else {\n        const renderer = await this.renderer();\n        canvas = this.addElement(renderer.domElement);\n      }\n      this.loadingElement?.remove();\n      const context = canvas.getContext(\"2d\")!;\n      return { canvas, context };\n    })());\n  }\n\n  #cachedDragTracker: Promise<DragTracker> | null = null;\n  async #dragTracker(): Promise<DragTracker> {\n    return (this.#cachedDragTracker ??= (async () => {\n      const dragTracker = new DragTracker((await this.canvasInfo()).canvas);\n      this.model?.twistySceneModel.dragInput.addFreshListener(\n        (dragInputMode: DragInputMode) => {\n          let dragInputEnabled = false;\n          switch (dragInputMode) {\n            case \"auto\": {\n              dragTracker.start();\n              dragInputEnabled = true;\n              break;\n            }\n            case \"none\": {\n              dragTracker.stop();\n              break;\n            }\n          }\n          this.contentWrapper.classList.toggle(\n            \"drag-input-enabled\",\n            dragInputEnabled,\n          );\n        },\n      );\n      return dragTracker;\n    })());\n  }\n\n  #cachedCamera: Promise<PerspectiveCamera> | null = null;\n  async camera(): Promise<PerspectiveCamera> {\n    return (this.#cachedCamera ??= (async () => {\n      const camera = new (await THREEJS).PerspectiveCamera(\n        20,\n        1, // We rely on the resize logic to handle this.\n        0.1,\n        20,\n      );\n      camera.position.copy(\n        new (await THREEJS).Vector3(2, 4, 4).multiplyScalar(\n          this.options?.backView ? -1 : 1,\n        ),\n      );\n      camera.lookAt(0, 0, 0);\n      // TODO: `TwistyOrbitControls` breaks isolateion\n      return camera;\n    })());\n  }\n\n  #cachedOrbitControls: Promise<TwistyOrbitControls> | null = null;\n  async orbitControls(): Promise<TwistyOrbitControls> {\n    return (this.#cachedOrbitControls ??= (async () => {\n      const orbitControls = new TwistyOrbitControls(\n        this.model!,\n        !!this.options?.backView,\n        (await this.canvasInfo()).canvas,\n        await this.#dragTracker(),\n      );\n\n      if (this.model) {\n        this.addListener(\n          this.model.twistySceneModel.orbitCoordinates,\n          async (orbitCoordinates: OrbitCoordinates) => {\n            const camera = await this.camera();\n            setCameraFromOrbitCoordinates(\n              camera,\n              orbitCoordinates,\n              this.options?.backView,\n            );\n            // TODO: Wrap in StaleDropper?\n\n            this.scheduleRender();\n          },\n        );\n      }\n\n      return orbitControls;\n    })());\n  }\n\n  addListener<T>(\n    prop: TwistyPropParent<T>,\n    listener: (value: T) => void,\n  ): void {\n    prop.addFreshListener(listener);\n    this.#disconnectionFunctions.push(() => {\n      prop.removeFreshListener(listener);\n      // disconnected = true; // TODO\n    });\n  }\n\n  #disconnectionFunctions: (() => void)[] = [];\n  disconnect(): void {\n    for (const fn of this.#disconnectionFunctions) {\n      fn();\n    }\n    this.#disconnectionFunctions = []; // TODO: Encapsulate this.\n  }\n\n  #experimentalNextRenderFinishedCallback: (() => void) | null = null;\n  experimentalNextRenderFinishedCallback(callback: () => void): void {\n    this.#experimentalNextRenderFinishedCallback = callback;\n  }\n\n  async render(): Promise<void> {\n    if (!this.scene) {\n      throw new Error(\"Attempted to render without a scene\");\n    }\n\n    this.stats?.begin();\n\n    const [scene, camera, canvas] = await Promise.all([\n      this.scene.scene(),\n      this.camera(),\n      this.canvasInfo(),\n    ]);\n    if (this.rendererIsShared) {\n      renderPooled(this.#width, this.#height, canvas.canvas, scene, camera);\n    } else {\n      (await this.renderer()).render(scene, camera);\n    }\n\n    this.stats?.end();\n    this.#experimentalNextRenderFinishedCallback?.();\n    this.#experimentalNextRenderFinishedCallback = null;\n  }\n\n  #scheduler = new RenderScheduler(this.render.bind(this));\n  scheduleRender(): void {\n    // console.log(\"scheduling\", this);\n    this.#scheduler.requestAnimFrame();\n  }\n}\n\ncustomElementsShim.define(\"twisty-3d-vantage\", Twisty3DVantage);\n"],
  "mappings": "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",
  "names": ["combineTransformationData", "definition", "transformationData1", "transformationData2", "newTransformationData", "orbitName", "orbitDefinition", "orbit1", "orbit2", "isOrbitTransformationDataIdentityUncached", "newPerm", "idx", "newOri", "applyTransformationDataToStateData", "stateData", "transformationData", "newStateData", "newPieces", "FREEZE", "identityOrbitCache", "constructIdentityOrbitTransformation", "numPieces", "cached", "newPermutation", "newOrientation", "i", "orbitTransformation", "constructIdentityTransformationDataUncached", "transformation", "moveToTransformationUncached", "kpuzzle", "move", "quantumKey", "quantumMoveDefinition", "derivedFrom", "repeatTransformationUncached", "moveDefinition", "inverseMoveDefinition", "KState", "source", "alg", "stateOrbitData", "transformationOrbit", "KTransformation", "options", "invertTransformation", "#cachedIsIdentity", "t2", "isTransformationDataIdentical", "transformationRepetitionOrder", "amount", "numOrientations", "orbitTransformationData", "permutation", "orientation", "isOrbitTransformationDataIdentical", "orbitTransformationData1", "orbitTransformationData2", "fromIdx", "halfish", "twiceHalfish", "AlgToTransformationTraversal", "TraversalDownUp", "algNode", "grouping", "algTransformation", "commutator", "aTransformation", "bTransformation", "conjugate", "_", "algToTransformation", "functionFromTraversal", "gcd", "a", "b", "order", "orbitPieces", "startIdx", "currentIdx", "orientationSum", "cycleLength", "KPuzzle", "#moveToTransformationDataCache", "Move", "cacheKey", "cachedTransformationData", "Alg", "#cachedCanConvertStateToUniqueTransformation", "pieces", "piece", "getFaceletStickeringMask", "stickeringMask", "orbitName", "pieceIdx", "faceletIdx", "hint", "pieceStickeringMask", "regular", "faceletStickeringMask", "PieceAnnotation", "kpuzzle", "defaultValue", "orbitDef", "ignored", "oriented", "invisible", "dim", "pieceStickerings", "getPieceStickeringMask", "pieceStickering", "PuzzleStickering", "pieceSet", "pieces", "i", "orbitStickeringMask", "StickeringManager", "pieceSets", "newPieceSet", "pieceLoop", "moveSource", "transformation", "moveSources", "orbitNames", "orbitPrefix", "LL", "LS", "megaAnd3x3x3LL", "megaAnd3x3x3LS", "experimentalStickerings", "cubeLikeStickeringMask", "puzzleLoader", "stickering", "puzzleStickering", "m", "orUD", "orLR", "M", "F2L", "CENTERS", "EDGES", "CORNERS", "L6E", "centerLL", "edgeFR", "cornerDFR", "slotFR", "dimF2L", "setPLL", "setOLL", "dimOLL", "cubeLikeStickeringList", "puzzleID", "options", "stickerings", "stickeringsFallback", "name", "info", "getCached", "getValue", "cachedPromise", "PLazy", "executor", "resolve", "function_", "value", "error", "_resolve", "reject", "onFulfilled", "onRejected", "from", "asyncGetPuzzleGeometry", "puzzleName", "asyncGetKPuzzle", "pgPromise", "pg", "kpuzzleDefinition", "puzzleGeometry", "pgNotation", "KPuzzle", "PGPuzzleLoader", "puzzleSpecificSimplifyOptionsPromise", "#cachedPG", "#cachedKPuzzle", "#cachedSVG", "CubePGPuzzleLoader", "kpuzzlePromiseFn", "Move", "cube3x3x3KPuzzleDefinition", "getPartialAppendOptionsForPuzzleSpecificSimplifyOptions", "puzzleSpecificSimplifyOptions", "puzzleOrientationCacheRaw", "descAsyncGetPuzzleGeometry", "desc", "asyncGetKPuzzle", "pg", "kpuzzleDefinition", "puzzleGeometry", "pgNotation", "KPuzzle", "nextCustomID", "customPGPuzzleLoader", "info", "customID", "cachedKPuzzle", "kpuzzlePromiseFn", "puzzleLoader", "puzzleSpecificSimplifyOptionsPromise", "experimental3x3x3KPuzzle", "cube3x3x3KPuzzleDefinition", "experimentalIs3x3x3Solved", "puzzleOrientation3x3x3Idx", "state", "idxU", "idxD", "unadjustedIdxL", "idxL", "puzzleOrientationCacheRaw", "puzzleOrientationCacheInitialized", "puzzleOrientation3x3x3Cache", "uAlgs", "s", "Alg", "yAlg", "uAlg", "transformation", "i", "normalize3x3x3Orientation", "orientationTransformation", "options", "KState", "wcaEvents", "twizzleEvents", "wcaEvents", "cube2x2x2", "getCached", "KPuzzle", "asyncGetPuzzleGeometry", "stickering", "cubeLikeStickeringMask", "cubeLikeStickeringList", "makeSourceInfo", "moveStrings", "type", "from", "to", "output", "moveString", "move", "Move", "family", "direction", "axisInfos", "byFamily", "axis", "info", "moveSourceInfo", "byAxisThenType", "_a", "entry", "byAxisThenSpecificSlices", "firstOfType", "moveSourceType", "areQuantumMovesSameAxis", "quantumMove1", "quantumMove2", "simplestMove", "directedAmount", "sliceSpecificInfo", "QuantumMove", "axisInfo", "sliceDiameter", "far", "outerLayer", "innerLayer", "slice", "simplifySameAxisMoves", "moves", "quantumMod", "sliceDeltas", "lastCandidateRange", "adjustValue", "idx", "relativeDelta", "newDelta", "suffixLength", "puzzleSpecificSimplifyOptions333", "cube3x3x3", "experimental3x3x3KPuzzle", "clock", "ftoStickering", "puzzleLoader", "kpuzzle", "puzzleStickering", "PuzzleStickering", "m", "StickeringManager", "experimentalFTO_FC", "experimentalFTO_F2T", "experimentalFTO_SC", "experimentalFTO_L2C", "experimentalFTO_LBT", "ftoStickerings", "FTOPuzzleLoader", "PGPuzzleLoader", "fto", "megaminxStickeringMask", "megaminxStickerings", "megaminxStickeringListPromise", "MegaminxPuzzleLoader", "megaminx", "PyraminxPuzzleLoader", "pyraminx", "square1", "kilominx", "pg", "kpuzzleDefinition", "moveDefinition", "puzzleGeometry", "pgNotation", "x2Transformation", "rediCube", "cube4x4x4", "CubePGPuzzleLoader", "melindas2x2x2x2", "puzzles", "twistyDebugGlobals", "setTwistyDebug", "options", "key", "value", "StaleDropper", "#latestAssignedIdx", "#latestResolvedIdx", "p", "resolve", "reject", "idx", "result", "e", "globalSourceGeneration", "TwistyPropParent", "#children", "#rawListeners", "#rawDispatchPending", "#freshListeners", "v1", "v2", "_v1", "_v2", "child", "sourceEvent", "#scheduleRawDispatch", "listener", "#dispatchRawListeners", "staleDropper", "lastResult", "callback", "TwistyPropSource", "#value", "initialValue", "from", "input", "sourceEventDetail", "oldValuePromise", "SimpleTwistyPropSource", "NO_VALUE", "TwistyPropDerived", "parents", "userVisibleErrorTracker", "#parents", "parent", "#cachedLastSuccessfulCalculation", "#cachedLatestGenerationCalculation", "generation", "latestGenerationCalculation", "#cacheDerive", "#getParents", "inputValuePromises", "inputs", "inputsPromise", "cachedLatestGenerationCalculation", "cache", "output", "cachedInputs", "FreshListenerManager", "#disconnectionFunctions", "prop", "disconnected", "wrappedListener", "props", "initialIgnoresLeft", "_", "promises", "values", "disconnectionFunction", "RenderScheduler", "timestamp", "hintFaceletStyles", "HintFaceletProp", "TAU", "DEGREES_PER_RADIAN", "HTMLElementStub", "HTMLElementShim", "CustomElementsStub", "customElementsShim", "CSSSource", "sourceText", "ManagedCustomElement", "#cssSourceMap", "cssSource", "existing", "cssElem", "element", "performance", "Stats", "StatsPanel", "event", "panel", "id", "i", "time", "memory", "PR", "WIDTH", "HEIGHT", "TEXT_X", "TEXT_Y", "GRAPH_X", "GRAPH_Y", "GRAPH_WIDTH", "GRAPH_HEIGHT", "name", "fg", "bg", "maxValue", "cachedConstructorProxy", "proxy3D", "THREEJS", "globalPixelRatioOverride", "pixelRatio", "twisty3DVantageCSS", "MOVEMENT_EPSILON", "DragTracker", "target", "#dragInfoMap", "eventType", "#targetListeners", "#lazyListenersRegistered", "#registerLazyListeners", "#clear", "#trackDrag", "movementInfo", "newDragInfo", "trackDragResult", "altKey", "ctrlKey", "metaKey", "shiftKey", "renderers", "rawRenderPooled", "width", "height", "scene", "camera", "newRenderer", "renderer", "renderPooled", "canvas", "rendererCanvas", "context", "rendererConstructor", "INERTIA_DEFAULT", "INERTIA_DURATION_MS", "INERTIA_TIMEOUT_MS", "VERTICAL_MOVEMENT_BASE_SCALE", "momentumScale", "progress", "Inertia", "startTimestamp", "momentumX", "momentumY", "now", "progressBefore", "progressAfter", "delta", "TwistyOrbitControls", "model", "mirror", "dragTracker", "f", "_a", "temperedX", "temperedY", "attachedInfo", "movementX", "movementY", "scale", "minDim", "prevCoords", "setCameraFromOrbitCoordinates", "orbitCoordinates", "backView", "spherical", "dedicatedRenderersSoFar", "DEFAULT_MAX_DEDICATED_RENDERERS", "sharingRenderers", "shareRenderer", "haveStartedSharingRenderers", "Twisty3DVantage", "#onResizeStaleDropper", "#width", "#height", "#cachedRenderer", "#cachedCanvas", "#cachedDragTracker", "#cachedCamera", "#cachedOrbitControls", "#experimentalNextRenderFinishedCallback", "#scheduler", "#onResize", "#setupBasicPresses", "#dragTracker", "canvasInfo", "w", "h", "off", "yoff", "excess", "dragInputMode", "dragInputEnabled", "orbitControls", "fn"]
}
